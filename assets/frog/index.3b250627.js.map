{"mappings":"AAAA,MAAM,GAAG;IACP,YAAY,WAAW,EACX,MAAM,EACN,IAAI,EACJ,QAAQ,GAAG,CAAC,EACZ,IAAI,GAAG,KAAK,CAAE;QACxB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,kBAAkB;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,WAAW;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;QAEtD,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;aAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAE/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAEpC,YAAY;QACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,IAAI,IAAI,GAAG;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,CAAC,GAC7B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACxB;IAED,IAAI,IAAI,GAAG;QACT,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KAC1C;IAED,IAAI,IAAI,GAAG;QACT,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KAC3C;IAED,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAA,uEAAuE;IAC7F,oEAAoE;KAC5E;IAED,KAAK,CAAC,SAAS,EAAE;QACf,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QAEpB,KAAK,MAAM,QAAQ,IAAI,SAAS,CAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YAC9D,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC;YAClC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7B,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAE9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;KAEJ;CACF","sources":["public/src/obj/bug.js"],"sourcesContent":["class Bug {\r\n  constructor(environment,\r\n              sprite,\r\n              lily,\r\n              bugScale = 1,\r\n              type = 'fly') { \r\n    this.environment = environment;\r\n    this.type = type;\r\n    this.sprite = sprite;\r\n    this.bugScale = bugScale;\r\n\r\n    // bug stuff > = <\r\n    this.edible = true;\r\n    this.nutrition = 20;\r\n    this.destroyed = false;\r\n\r\n    // position\r\n    this.lily = lily;\r\n\r\n    let position = this.environment.getLilyPos(this.lily);\r\n\r\n    if (type == 'fly') this.offY = 30;\r\n    else this.offY = this.dimY / 3;\r\n\r\n    this.posY = position[1] - this.offY;\r\n\r\n    // animation\r\n    this.bugFrame = 0;\r\n    this.bugMax = 1;\r\n    this.bugToggle = 1;\r\n    this.maxFrames = 60;\r\n  }\r\n\r\n  get posX() {\r\n    return this.environment.getLilyPos(this.lily)[0] \r\n           + this.environment.lilyDimX / 2\r\n           - this.dimX / 2;\r\n  }\r\n\r\n  get dimX() {\r\n    return this.bugScale * this.sprite.width;\r\n  }\r\n\r\n  get dimY() {\r\n    return this.bugScale * this.sprite.height;\r\n  }\r\n\r\n  isTouched(obj) {\r\n    return obj.lily == this.lily;//rectTest(this.posX, this.posY, this.sprite.width, this.sprite.height,\r\n           //         obj.posX, obj.posY, obj.sprite.width, obj.sprite.height);\r\n  }\r\n\r\n  frame(predators) {\r\n    if (this.type == 'fly') this.posY += this.bugMax * this.bugToggle / 5;\r\n\r\n    if (this.bugFrame > this.maxFrames - 2) this.bugToggle *= -1;\r\n    this.bugFrame++;\r\n    this.bugFrame %= 60;\r\n\r\n    for (const predator of predators) {\r\n      if (this.isTouched(predator) && predator.canEat && this.edible) {\r\n        predator.hunger -= this.nutrition;\r\n        predator.ateThisFrame = true;\r\n        predator.foodName = this.type;\r\n\r\n        this.destroyed = true;\r\n        this.edible = false;\r\n      }\r\n    }\r\n  }\r\n}"],"names":[],"version":3,"file":"index.3b250627.js.map","sourceRoot":"/__parcel_source_root/"}