{"mappings":"AAAA,SAASA,kBACPC,KAAAC,MAEY,WAEVC,IAAMF,KAAKG,aAAaD,IACxBE,UAAYJ,KAAKG,aAAaC,UAC9BC,WAAaL,KAAKG,aAAaE,WAC/BC,IAAMN,KAAKG,aAGXI,mBAGAC,cAAgB,EAChBC,UAAY,EACZC,UAAY,EACZC,SAAU,EACVC,iBAAkB,EAGlBC,QAAU,EACVC,GAAKC,eAAeF,QAAUX,IAAS,IAAEc,MAAOH,QAAUX,IAAS,IAAEe,OAAQC,OAC7EJ,GAAGK,cAAc,SAAS,GAG1BC,UAAYC,cAAa,GAAK,GAAI,EAAI,KACtCD,UAAUE,SACVF,UAAUG,SAASH,UAAUG,WAAWC,EAAGC,YAAc,EAAI,IAC7DL,UAAUM,SAAS,UAEnBC,UAAYN,cAAa,GAAK,GAAI,EAAI,KACtCM,UAAUJ,SAASH,UAAUG,WAAWC,EAAGC,YAAc,EAAI,IAC7DE,UAAUD,SAAS,UAEnBE,UAAYP,cAAa,GAAK,GAAI,EAAI,KACtCO,UAAUL,SAASH,UAAUG,WAAWC,EAAGC,YAAc,EAAI,IAC7DG,UAAUF,SAAS,UAGnBG,SAAW,IAAIC,UACfD,SAASE,OAAOC,YAAc,EAAI,GAAIP,YAAc,EAAI,IAExDI,SAASI,UAAY,WAAajC,KAAKkC,MAAQ,QAC/CL,SAASM,QAAU,WAAanC,KAAKkC,MAAQ,QAC7CL,SAASO,UAAYpC,KAAKqC,SAC1BR,SAASS,KAAO,IACdT,SAAOU,UAAY,OACrBV,SAASb,MAAQ,IACjBa,SAASZ,OAASQ,YAAc,GAGhCe,aAAaR,YAAaP,cAG5BzB,KAAoByC,cAEf,WACHlC,mBACAmC,aAAaV,YAAaP,cAG5BzB,KAAKqC,SAAW,WACT1B,UAEDL,IAAIqC,OAASvB,UAAUwB,QACvBtC,IAAIuC,OAASlB,UAAUiB,QACvBtC,IAAIwC,OAASlB,UAAUgB,SAG3BjC,SAAU,GAEZX,KAAK+C,SAAW,WAAa/C,KAAKG,aAAa6C,UAAUC,aAIzDjD,KAAAkD,MAAA,WAIMvC,UACFH,eAAiB2C,UAAY,GAEzB3C,eAAiB,MACnBE,WAAayC,UAAY,IAErBzC,WAAaD,WACbT,KAAK+C,cAMf/C,KAAKoD,KAAO,WACVpD,KAAKkD,QAGLG,WAAW,GAEXC,OACAC,KAAK,IACLC,OAAO,IACPC,KAAKzB,YAAc,EAAGP,YAAc,EAAGO,YAAc,EAAGP,YAAc,EACpE,GAAI,GAAI,GAAI,IACdiC,MAEAJ,OACAxC,GAAG6C,OAAOtD,YACVA,WAAWuD,WAAW,OAAQ1D,IAAa,SAC3CG,WAAWuD,WAAW,SAAUxC,UAAUwB,SAC1CvC,WAAWuD,WAAW,SAAUjC,UAAUiB,SAC1CvC,WAAWuD,WAAW,SAAUhC,UAAUgB,SAC1C9B,GAAG2C,KAAK,EAAG,EAAG5C,QAAUX,IAAS,IAAEc,MAAOH,QAAUX,IAAS,IAAEe,QAC/D4C,MAAM/C,GAAIkB,YAAc,EAAInB,QAAUX,IAAS,IAAEc,MAAQ,EAAG,EAAIS,YAAc,GAC9EoC,MAAM3D,IAAc,SAAG8B,YAAc,EAAInB,QAAUX,IAAS,IAAEc,MAAQ,EAAG,EAAIS,YAAc,EACrF,EAAIvB,IAAS,IAAEc,MAAO,EAAId,IAAS,IAAEe,QAC3CyC,MAEA7B,SAASuB,OAGThC,UAAU0C,MAAM,WAAY,EAAItD,cAAgB,KAAKuD,YACrDpC,UAAUmC,MAAM,WAAY,EAAItD,cAAgB,KAAKuD,YACrDnC,UAAUkC,MAAM,WAAY,EAAItD,cAAgB,KAAKuD,YACrDV,WAAW,EAAG7C","sources":["public/src/scene/character-select.js"],"sourcesContent":["function CharacterSelect() {\r\n  /* setup (っ◔◡◔)っ ❤ */\r\n\r\n  this.setup = function() {\r\n    // get injected properties\r\n    gfx = this.sceneManager.gfx;\r\n    pixelFont = this.sceneManager.pixelFont;\r\n    frogShader = this.sceneManager.frogShader;\r\n    mgr = this.sceneManager;\r\n\r\n    // canvas\r\n    calcWindowBounds();\r\n\r\n    // global fade\r\n    globalOpacity = 0;\r\n    nothingDt = 4;\r\n    countTime = 0;\r\n    exiting = false;\r\n    displayFrogress = false;\r\n\r\n    // frog renderer\r\n    imScale = 2;\r\n    pg = createGraphics(imScale * gfx['bby'].width, imScale * gfx['bby'].height, WEBGL);\r\n    pg.setAttributes('alpha', true);\r\n\r\n    // color picker\r\n    hueSlider = createSlider(-.8, .8, 0., .01);\r\n    hueSlider.center();\r\n    hueSlider.position(hueSlider.position().x, screenSizeY / 2 - 10);\r\n    hueSlider.addClass('slider')\r\n\r\n    satSlider = createSlider(-.8, .8, 0., .01);\r\n    satSlider.position(hueSlider.position().x, screenSizeY / 2 + 20);\r\n    satSlider.addClass('slider');\r\n\r\n    valSlider = createSlider(-.8, .8, 0., .01);\r\n    valSlider.position(hueSlider.position().x, screenSizeY / 2 + 50);\r\n    valSlider.addClass('slider');\r\n\r\n    // OK button\r\n    goButton = new Clickable();\r\n    goButton.locate(screenSizeX / 2 - 58, screenSizeY / 2 + 70);\r\n    \r\n    goButton.onOutside = function() { this.color = '#0a0'; };\r\n    goButton.onHover = function() { this.color = '#0f0'; };\r\n    goButton.onRelease = this.goToFade;\r\n    goButton.text = '✓';\r\n    goButton.textColor = '#fff';\r\n    goButton.width = 128;\r\n    goButton.height = screenSizeY / 32;\r\n\r\n    // create game!\r\n    createCanvas(screenSizeX, screenSizeY);\r\n  }\r\n\r\n  /* events (/◕ヮ◕)/ */\r\n\r\n  this.windowResized = function() {\r\n    calcWindowBounds();\r\n    resizeCanvas(screenSizeX, screenSizeY);\r\n  }\r\n\r\n  this.goToFade = function() { \r\n    if (!exiting) {\r\n        // inject properties for custom frog\r\n        mgr.hueVal = hueSlider.value();\r\n        mgr.satVal = satSlider.value();\r\n        mgr.valVal = valSlider.value();\r\n    }\r\n\r\n    exiting = true;\r\n  }\r\n  this.goToGame = function() { this.sceneManager.showScene(OpenLinear); }\r\n  //this.mouseClicked = this.goToFade;\r\n  //this.keyPressed = this.goToFade;\r\n\r\n  /* main loop ✨(っ◔︣◡◔᷅)っc(◕︣◡◕᷅c)✨ */\r\n\r\n  this.frame = function() {\r\n    // fade out\r\n    if (exiting) {\r\n      globalOpacity += deltaTime / 10;\r\n\r\n      if (globalOpacity >= 255) {\r\n        countTime += deltaTime / 1000;\r\n\r\n        if (countTime >= nothingDt) {\r\n            this.goToGame();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.draw = function() {\r\n    this.frame();\r\n\r\n    // background\r\n    background(0);\r\n\r\n    push();\r\n    fill(50);\r\n    stroke(50);\r\n    rect(screenSizeX / 3, screenSizeY / 3, screenSizeX / 3, screenSizeY / 3,\r\n      10, 10, 10, 10)\r\n    pop();\r\n\r\n    push();\r\n    pg.shader(frogShader);\r\n    frogShader.setUniform('tex0', gfx['bbyBody']);\r\n    frogShader.setUniform('hueVal', hueSlider.value());\r\n    frogShader.setUniform('satVal', satSlider.value());\r\n    frogShader.setUniform('valVal', valSlider.value());\r\n    pg.rect(0, 0, imScale * gfx['bby'].width, imScale * gfx['bby'].height);\r\n    image(pg, screenSizeX / 2 - imScale * gfx['bby'].width / 3, 2 * screenSizeY / 5);\r\n    image(gfx['bbyFrame'], screenSizeX / 2 - imScale * gfx['bby'].width / 3, 2 * screenSizeY / 5,\r\n          2 * gfx['bby'].width, 2 * gfx['bby'].height);\r\n    pop();\r\n\r\n    goButton.draw();\r\n\r\n    // fade out\r\n    hueSlider.style('opacity', (1 - globalOpacity / 255).toString());\r\n    satSlider.style('opacity', (1 - globalOpacity / 255).toString());\r\n    valSlider.style('opacity', (1 - globalOpacity / 255).toString());\r\n    background(0, globalOpacity);\r\n  }\r\n}"],"names":["CharacterSelect","this","setup","gfx","sceneManager","pixelFont","frogShader","mgr","calcWindowBounds","globalOpacity","nothingDt","countTime","exiting","displayFrogress","imScale","pg","createGraphics","width","height","WEBGL","setAttributes","hueSlider","createSlider","center","position","x","screenSizeY","addClass","satSlider","valSlider","goButton","Clickable","locate","screenSizeX","onOutside","color","onHover","onRelease","goToFade","text","textColor","createCanvas","windowResized","resizeCanvas","hueVal","value","satVal","valVal","goToGame","showScene","OpenLinear","frame","deltaTime","draw","background","push","fill","stroke","rect","pop","shader","setUniform","image","style","toString"],"version":3,"file":"index.d95c2443.js.map"}