{"mappings":"AAAA,SAASA,UACPC,KAAAC,gBACK,aACLD,KAAKE,gBAAkB,aACvBF,KAAKG,eAAiB,aAEtBH,KAAKI,MAAQ,WAEXC,IAAML,KAAKM,aAAaD,IACxBE,IAAMP,KAAKM,aAAaC,IACxBC,UAAYR,KAAKM,aAAaE,UAC9BC,WAAaT,KAAKM,aAAaG,WAC/BC,OAASV,KAAKM,aAAaI,OAC3BC,OAASX,KAAKM,aAAaK,OAC3BC,OAASZ,KAAKM,aAAaM,OAE3BC,IAAMb,KAAKM,aAGXQ,mBAGAd,KAAKe,cACLC,QAAUC,OAAOC,YAAYC,KAG7BC,iBAAkB,EAClBC,eAAgB,EAChBC,YAAa,EAGAC,aAAaC,YAAaC,aAChCC,OAAO,kBAGdC,OAAS,IACTC,UAAW,EAGXC,GAAKC,eAAezB,IAAI0B,IAAIC,MAAO3B,IAAI0B,IAAIE,OAAQC,OACnDL,GAAGM,cAAc,SAAS,GAE1BnC,KAAKC,mBAGPD,KAAoBoC,cAEf,WACHtB,mBAEIuB,OAAOC,UAAUD,OAAOE,UAAUF,OAAOG,cAAcC,iBAC1DC,IAAIC,EAAGD,IAAIE,GAAK,CAACpB,YAAaC,aAC/BoB,aAAarB,YAAaC,cAG5BzB,KAAK8C,aAAe,SAASC,IACvB3B,iBAAoB4B,KAAKC,WAAcC,eAGlCb,OAAOc,WAAWC,OAAOC,SAASC,SAFzCN,KAAKO,eAAgB,GAKzBvD,KAAKwD,WAAa,WAChB,GAAIpC,gBAAiB,CACd4B,KAAKC,YACJQ,SAAWC,SACbV,KAAKW,MAAQ,EACJF,SAAWG,aACpBZ,KAAKW,MAAQ,IAIN,KAAPE,IACFnB,IAAIoB,WAAWd,MACC,KAAPa,IACTnB,IAAIqB,UAAYrB,IAAIqB,SACJ,UAAPF,KAGO,KAAPA,MACTnB,IAAIsB,WAAsB,WAAKtB,IAAIsB,WAAsB,WAG3D,IAAK,MAAMC,KAAU5B,OAAO6B,MACtBL,KAAOI,EAAOE,eAAe9B,OAAO6B,MAAMD,UAGzC5B,OAAOc,WAAWC,OAAOC,SAASC,UAG7CtD,KAAKoE,WAAa,SAASC,KAQ3BrE,KAAKsE,MAAQ,WAGX,GAFAjC,OAAOiC,SAEFjC,OAAOkC,UAAUC,UAAW,CAC/BC,MAAMC,SAAS1B,GAASA,EAAKsB,MAAM5B,OAEnC,IAAK,MAAMiC,KAAOC,KAChBA,KAAKD,GAAKL,MAAMG,OAEZG,KAAKD,GAAKE,WAAWD,KAAKE,OAAOH,EAAK,GAG5CjC,IAAI4B,QAEJtE,KAAKE,oBAKTF,KAAK+E,WAAa,WAChB/B,KAAKW,KAAO,EACZX,KAAKgC,UAAW,EAChB5D,iBAAkB,EAElB6D,OAAS,IAAIC,KAAKjE,OAAQZ,IAAe,UAAG2C,KAAKmC,OAAS,EACxCnC,KAAKoC,KAAO,GAC9BH,OAAOI,cAAe,EACtBJ,OAAOK,OAAQ,EACfb,MAAMc,KAAKN,QAEXO,aAAe,CAAC,EAAG,GACnBP,OAAO1B,eAAgB,EAEvBhD,IAAIkF,KAAKC,OACTnF,IAAI0E,OAAOU,UAAU,IACrBpF,IAAI0E,OAAOW,OAEXX,OAAOY,QAAU,WACXZ,OAAOa,gBAAkBb,OAAOE,QAAUnC,KAAKmC,OAAS,EAC1DF,OAAO1B,eAAgB,EACd0B,OAAOE,QAAUnC,KAAKmC,OAAS,IACxCF,OAAOc,gBACPd,OAAOe,aAAc,EACrBf,OAAOgB,cAAgB,EAEvBhB,OAAOiB,YAAc,WACnBjB,OAAOgB,eAAiBE,UAAY,IAEpCC,MAAM/F,IAAIgG,YAAahG,IAAIgG,YAAYrE,MAAQ,EAAG,GAE9CiD,OAAOgB,cAAgB,IACzB1F,IAAI+F,QAAQX,UAAU,IACtBpF,IAAI+F,QAAQC,OACZ1F,IAAI2F,UAAUC,cAAe,CAACC,YAAa,EAAGC,SAAU,CAAC,EAAG,EAAG,EAAG,UAO5E3G,KAAA4G,KAAA,WAGE5G,KAAKsE,QAGLtE,KAAK6G,eAAe7G,KAAK8G,IAGzB7F,OAAO2F,OAGP,IAAK,MAAMjC,KAAOC,KAChBW,OAEAwB,UAAYrE,IAAIsE,YAAYrC,EAAIsC,KAAMtC,EAAIuC,MAC1CC,aAAaJ,WAEbX,MAAMzB,EAAIyC,OAAQ,EAAG,EAAG1E,IAAI2E,MAAQ1C,EAAI2C,KAAM5E,IAAI2E,MAAQ1C,EAAI4C,MAE9DC,MAIFnF,OAAOuE,OAGP,IAAK,MAAM5D,KAAQwC,aAEjBf,MAAMzB,GAAM4D,OAIVhF,WACF6F,WAAW,EAAG9F,QAEdA,QAAUwE,UAAY,GACtBvE,SAAWD,QAAU,GAIvB3B,KAAKG,kBAITuH,aAAe,IAAI3H","sources":["public/src/scene/general.js"],"sourcesContent":["function General() {\r\n  /* setup (っ◔◡◔)っ ❤ */\r\n  this.particularSetup = function() {};\r\n  this.particularFrame = function() {};\r\n  this.particularDraw = function() {};\r\n\r\n  this.setup = function() {\r\n    // get injected properties\r\n    gfx = this.sceneManager.gfx;\r\n    sfx = this.sceneManager.sfx;\r\n    pixelFont = this.sceneManager.pixelFont;\r\n    frogShader = this.sceneManager.frogShader;\r\n    hueVal = this.sceneManager.hueVal;\r\n    satVal = this.sceneManager.satVal;\r\n    valVal = this.sceneManager.valVal;\r\n\r\n    mgr = this.sceneManager;\r\n\r\n    // canvas\r\n    calcWindowBounds();\r\n\r\n    // environment\r\n    this.envFunction();\r\n    envType = lilies.constructor.name;\r\n\r\n    // global controls\r\n    controlsEnabled = true;\r\n    buttonPressed = false;\r\n    puzzleMode = false;\r\n\r\n    // create game!\r\n    let canvas = createCanvas(screenSizeX, screenSizeY);\r\n    canvas.parent('game-container');\r\n\r\n    // fade in!\r\n    fadeIn = 255;\r\n    fadingIn = true;\r\n\r\n    // frog drawer\r\n    pg = createGraphics(gfx.bby.width, gfx.bby.height, WEBGL);\r\n    pg.setAttributes('alpha', true);\r\n\r\n    this.particularSetup();\r\n  }\r\n\r\n  /* events (/◕ヮ◕)/ */\r\n\r\n  this.windowResized = function() {\r\n    calcWindowBounds();\r\n\r\n    if (player.hasQuest) player.questList[player.currentQuest].calcGUIBounds();\r\n    [cam.w, cam.h] = [screenSizeX, screenSizeY];\r\n    resizeCanvas(screenSizeX, screenSizeY);\r\n  }\r\n\r\n  this.mouseClicked = function(e) {\r\n    if (controlsEnabled && !frog.isJumping && !cl_lastClicked) {\r\n      frog.jumpNextFrame = true;\r\n    }\r\n    else if (player.quitReady) window.location.reload();\r\n  }\r\n\r\n  this.keyPressed = function() {\r\n    if (controlsEnabled) {\r\n      if (!frog.isJumping) {\r\n        if (keyCode == UP_ARROW) {\r\n          frog.type += 1;\r\n        } else if (keyCode == DOWN_ARROW) {\r\n          frog.type -= 1;\r\n        }\r\n      }\r\n\r\n      if (key == 'y') {\r\n        cam.toggleLock(frog);\r\n      } else if (key == 'u') {\r\n        cam.anchored = !cam.anchored;\r\n      } else if (key == 'Escape') {\r\n        //player.resetCharacter();\r\n        //frog = player.character;\r\n      } else if (key == 'h') {\r\n        cam.guiOptions['helpLines'] = !cam.guiOptions['helpLines'];\r\n      }\r\n\r\n      for (const letter in player.binds) {\r\n        if (key == letter.toLowerCase()) player.binds[letter]();\r\n      }\r\n    } \r\n    else if (player.quitReady) window.location.reload();\r\n  }\r\n\r\n  this.mouseWheel = function(event) {\r\n    if (controlsEnabled) {\r\n      //cam.zoom(event.delta);\r\n      //frog.scale = cam.scale;\r\n      //disabled in demo!\r\n    }\r\n  }\r\n\r\n  this.frame = function() {\r\n    player.frame();\r\n\r\n    if (!player.character.tooHungry) {\r\n      frogs.forEach((frog) => frog.frame(cam));\r\n\r\n      for (const bug in bugs) {\r\n        bugs[bug].frame(frogs);\r\n\r\n        if (bugs[bug].destroyed) bugs.splice(bug, 1);\r\n      }\r\n\r\n      cam.frame();\r\n\r\n      this.particularFrame();\r\n    }\r\n  }\r\n\r\n  /* ~ other stuff ~ */\r\n  this.wizardAnim = function() {\r\n    frog.type = 0;\r\n    frog.drawType = false;\r\n    controlsEnabled = false;\r\n\r\n    wizard = new Frog(lilies, gfx['frogStand'], frog.number + 3,\r\n                      frog.lily + 3);\r\n    wizard.pointingLeft = true;\r\n    wizard.isBby = false;\r\n    frogs.push(wizard);\r\n\r\n    visibleFrogs = [0, 1];\r\n    wizard.jumpNextFrame = true;\r\n\r\n    sfx.soso.stop();\r\n    sfx.wizard.setVolume(.5);\r\n    sfx.wizard.play();\r\n\r\n    wizard.special = function() {\r\n      if (wizard.stoppedJumping && wizard.number != frog.number + 1) {\r\n        wizard.jumpNextFrame = true;\r\n      } else if (wizard.number == frog.number + 1) {\r\n        wizard.deleteSpecial();\r\n        wizard.drawSpecial = true;\r\n        wizard.specialFrames = 0;\r\n\r\n        wizard.specialDraw = function() {\r\n          wizard.specialFrames += deltaTime / 1000;\r\n\r\n          image(gfx.alertBubble, gfx.alertBubble.width / 2, 0);\r\n\r\n          if (wizard.specialFrames > 5) {\r\n            sfx.toyTown.setVolume(.3);\r\n            sfx.toyTown.loop();\r\n            mgr.showScene(FactorsPuzzle, {specialLily: 9, initVals: [2, 3, 4, 5]});\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* main loop ✨(っ◔︣◡◔᷅)っc(◕︣◡◕᷅c)✨ */\r\n\r\n  this.draw = function() {\r\n    this.frame();\r\n\r\n    /* ~ background ~ */\r\n    this.drawBackground(this.bg);\r\n\r\n    /* ~ lilies ~ */\r\n    lilies.draw();\r\n\r\n    /* ~ bugs ~ */\r\n    for (const bug of bugs) {\r\n      push();\r\n\r\n      camBugPos = cam.toCamCoords(bug.posX, bug.posY);\r\n      translate(...camBugPos);\r\n\r\n      image(bug.sprite, 0, 0, cam.scale * bug.dimX, cam.scale * bug.dimY);\r\n\r\n      pop();\r\n    }\r\n\r\n    /* ~ gui ~ */\r\n    player.draw();\r\n    \r\n    /* ~ frog ~ */\r\n    for (const frog of visibleFrogs) {\r\n      // all frogs!\r\n      frogs[frog].draw();\r\n    };\r\n\r\n    /* ~ fade in ~ */\r\n    if (fadingIn) {\r\n      background(0, fadeIn);\r\n\r\n      fadeIn -= deltaTime / 10;\r\n      fadingIn = fadeIn >= 0;\r\n    }\r\n\r\n    // level-specific draw\r\n    this.particularDraw();\r\n  }\r\n}\r\n\r\ngeneralState = new General();"],"names":["General","this","particularSetup","particularFrame","particularDraw","setup","gfx","sceneManager","sfx","pixelFont","frogShader","hueVal","satVal","valVal","mgr","calcWindowBounds","envFunction","envType","lilies","constructor","name","controlsEnabled","buttonPressed","puzzleMode","createCanvas","screenSizeX","screenSizeY","parent","fadeIn","fadingIn","pg","createGraphics","bby","width","height","WEBGL","setAttributes","windowResized","player","hasQuest","questList","currentQuest","calcGUIBounds","cam","w","h","resizeCanvas","mouseClicked","e","frog","isJumping","cl_lastClicked","quitReady","window","location","reload","jumpNextFrame","keyPressed","keyCode","UP_ARROW","type","DOWN_ARROW","key","toggleLock","anchored","guiOptions","letter","binds","toLowerCase","mouseWheel","event","frame","character","tooHungry","frogs","forEach","bug","bugs","destroyed","splice","wizardAnim","drawType","wizard","Frog","number","lily","pointingLeft","isBby","push","visibleFrogs","soso","stop","setVolume","play","special","stoppedJumping","deleteSpecial","drawSpecial","specialFrames","specialDraw","deltaTime","image","alertBubble","toyTown","loop","showScene","FactorsPuzzle","specialLily","initVals","draw","drawBackground","bg","camBugPos","toCamCoords","posX","posY","translate","sprite","scale","dimX","dimY","pop","background","generalState"],"version":3,"file":"index.05f8f27f.js.map"}