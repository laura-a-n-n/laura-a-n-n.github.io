{"mappings":"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","sources":["public/src/scene/environment.js"],"sourcesContent":["function drawBackground() {\r\n    if (envType == 'LinearLilies') {\r\n        //background(0);\r\n\r\n        if (cam.x - cam.w / 2 < background_x_0) {\r\n            if (cam.x - cam.w / 2 <= background_x_1) {\r\n                background_x_0 = background_x_1;\r\n            }\r\n\r\n            background_x_1 = background_x_0 - bgWidth;\r\n        } else if (cam.x - cam.w / 2 >= background_x_0) {\r\n            if (cam.x - cam.w / 2 >= background_x_1) {\r\n                background_x_0 = background_x_1;\r\n            }\r\n\r\n            background_x_1 = background_x_0 + bgWidth;\r\n        }\r\n\r\n        bgScale = generalState.bgScale;\r\n        if (bgScale != 1) {\r\n            backgroundY = -bgScale * screenSizeY / 2;\r\n        } else backgroundY = 0;\r\n\r\n        image(bg, ...cam.toCamCoords(background_x_0, backgroundY, sX = false, sY = false), bgScale * bgWidth, bgScale * screenSizeY);\r\n        image(bg, ...cam.toCamCoords(background_x_1, backgroundY, sX = false, sY = false), bgScale * bgWidth, bgScale * screenSizeY);\r\n        \r\n        /* ~ water ~ */\r\n        // stroke(0, 100, 255);\r\n        // fill(0, 100, 255);\r\n        // rect(0, screenSizeY * .5, screenSizeX, screenSizeY);\r\n    } else if (envType == 'CyclicLilies') {\r\n        background(200);\r\n    } else if (envType == 'LinearLilies2D') {\r\n        background(0);\r\n    }\r\n}\r\n\r\nfunction linearEnvironment2D() {\r\n    // camera\r\n    cam = new Camera(screenSizeX / 2, screenSizeY / 2, screenSizeX, screenSizeY);\r\n    currScale = cam.scale;\r\n    envType = 'LinearLilies2D';\r\n\r\n    // create lilies\r\n    // lilies = new LinearLilies(cam, gfx['lily'], lilyScale, 60);\r\n    // lilies.calcLeftLily();\r\n    // lilies.calcStartLily();\r\n    lilies = new LinearLilies2D(cam, gfx['lilyDown']);\r\n\r\n    lilies.calcLeftLily();\r\n    lilies.calcStartLily();\r\n\r\n    // frog dimensions\r\n    frogDimX = gfx['bby'].width;\r\n    frogDimY = gfx['bby'].height;\r\n    // frogOffX = lilies.trueLilySize[0] / 4;\r\n    // frogOffY = -(frogDimY / 2 + lilies.lilyDimY / 2);\r\n\r\n    // scene bounds\r\n    boundLeft = 0;\r\n    boundRight = screenSizeX;\r\n\r\n    startLily = 0;\r\n    [startLilyX, startLilyY] = lilies.getLilyPos(startLily, 5);\r\n\r\n    // mark numbers\r\n    lilyNumPosX = startLilyX; + lilies.lilyDimX / 2;\r\n    lilyNumPosY = startLilyY; + 60;\r\n\r\n    // physics\r\n    gravity = 0;\r\n    kerplunked = [];\r\n    buoyancy = .2;\r\n    kerplunkSpeed = 5;\r\n\r\n    // arrays\r\n    frogs = [];\r\n    bugs = [];\r\n\r\n    /* ~ bugs ~ */\r\n\r\n    // make an fly!\r\n    // bugIndices = [];\r\n    // for (let i = 0; i < 10; i++) {\r\n    //   subtract = lilies.negativeLilies ? 25 : -startLily;\r\n    //   bugIndex = Math.floor(Math.random() * 10) - subtract;\r\n\r\n    //   if (bugIndices.indexOf(bugIndex) < 0 && bugIndex != startLily) {\r\n    //       bugIndices.push(bugIndex);\r\n\r\n    //       flyPos = lilies.getLilyPos(bugIndex);\r\n    //       flyPos[1] -= 30;\r\n\r\n    //       bugs.push(new Bug(gfx['fly'], ...flyPos));\r\n    //       console.log(bugs[i], flyPos);\r\n    //   }\r\n    // }\r\n\r\n    // player\r\n    player = new Player(cam, Frog);\r\n\r\n    player.characterProfile = [\r\n        lilies,\r\n        gfx['bby'],\r\n        0,\r\n        startLily\r\n    ];\r\n\r\n    frog = player.instantiateCharacter();\r\n    frogs[0] = frog;\r\n    cam.toggleLock(frog);\r\n\r\n    //player.assignQuest(flyQuest)\r\n\r\n    visibleFrogs = [0];\r\n}\r\n\r\nfunction cyclicEnvironment() {\r\n    environment = 'cyclic';\r\n\r\n    // camera\r\n    cam = new Camera(screenSizeX / 2, screenSizeY / 2, screenSizeX, screenSizeY);\r\n    currScale = cam.scale;\r\n\r\n    // create lilies\r\n    // lilies = new LinearLilies(cam, gfx['lily'], lilyScale, 60);\r\n    // lilies.calcLeftLily();\r\n    // lilies.calcStartLily();\r\n    lilies = new CyclicLilies(cam, gfx['lily']);\r\n\r\n    // frog dimensions\r\n    frogDimX = gfx['bby'].width;\r\n    frogDimY = gfx['bby'].height;\r\n\r\n    // scene bounds\r\n    boundLeft = 0;\r\n    boundRight = screenSizeX;\r\n\r\n    startLily = 0;\r\n    [startLilyX, startLilyY] = lilies.getLilyPos(startLily);\r\n\r\n    // mark numbers\r\n    lilyNumPosX = startLilyX; + lilies.lilyDimX / 2;\r\n    lilyNumPosY = startLilyY; + 60;\r\n\r\n    // physics\r\n    gravity = 0;\r\n    kerplunked = Array(lilies.numLilies).fill(0.);\r\n    buoyancy = .2;\r\n    kerplunkSpeed = 20;\r\n\r\n    // arrays\r\n    frogs = [];\r\n    bugs = [];\r\n\r\n    /* ~ bugs ~ */\r\n\r\n    // make an fly!\r\n    // bugIndices = [];\r\n    // for (let i = 0; i < 10; i++) {\r\n    //   subtract = lilies.negativeLilies ? 25 : -startLily;\r\n    //   bugIndex = Math.floor(Math.random() * 10) - subtract;\r\n\r\n    //   if (bugIndices.indexOf(bugIndex) < 0 && bugIndex != startLily) {\r\n    //       bugIndices.push(bugIndex);\r\n\r\n    //       flyPos = lilies.getLilyPos(bugIndex);\r\n    //       flyPos[1] -= 30;\r\n\r\n    //       bugs.push(new Bug(gfx['fly'], ...flyPos));\r\n    //       console.log(bugs[i], flyPos);\r\n    //   }\r\n    // }\r\n\r\n    // player\r\n    player = new Player(cam, Frog);\r\n\r\n    player.characterProfile = [\r\n        lilies,\r\n        gfx['bby'],\r\n        0,\r\n        startLily\r\n    ];\r\n\r\n    frog = player.instantiateCharacter();\r\n    frogs[0] = frog;\r\n    //cam.toggleLock(frog);\r\n\r\n    //player.assignQuest(flyQuest)\r\n\r\n    visibleFrogs = [0];\r\n}\r\n\r\nfunction linearEnvironment(lilyScale = 1) {\r\n    // camera\r\n    cam = new Camera(screenSizeX / 2, screenSizeY / 2, screenSizeX, screenSizeY);\r\n    //cam.anchored = true;\r\n\r\n    bg = generalState.bg;\r\n\r\n    scaleRatio = screenSizeY / bg.height;\r\n    bgWidth = scaleRatio * bg.width;\r\n\r\n    // create lilies\r\n    lilies = new LinearLilies(cam, gfx['lilyDown'], .2, 200);\r\n    lilies.calcLeftLily();\r\n    lilies.calcStartLily();\r\n\r\n    startLily = lilies.startLily;\r\n    [startLilyX, startLilyY] = lilies.getLilyPos(startLily);\r\n\r\n    // mark numbers\r\n    lilyNumPosX = startLilyX; + lilies.lilyDimX / 2;\r\n    lilyNumPosY = startLilyY;\r\n\r\n    // arrays\r\n    frogs = [];\r\n    bugs = [];\r\n\r\n    // player\r\n    player = new Player(cam, Frog);\r\n\r\n    player.characterProfile = [\r\n        lilies,\r\n        gfx['bby'],\r\n        0,\r\n        startLily\r\n    ];\r\n\r\n    //sLily = lilies.startLily + 2;\r\n    //[sLilyX, sLilyY] = lilies.getLilyPos(sLily);\r\n    //frog2 = new Frog(lilies, gfx['bby'], 2, sLily, sLilyX, sLilyY, lilies.trueLilySpacingX);\r\n\r\n    frog = player.instantiateCharacter();\r\n    //frogs.push(frog2);\r\n\r\n    cam.toggleLock(frog);\r\n\r\n    background_x_0 = cam.x - cam.w / 2;\r\n    background_x_1 = cam.x - cam.w / 2 - bgWidth;\r\n\r\n    // scene bounds\r\n    boundLeft = lilies.getLilyPos(lilies.leftLily) + frog.offX;\r\n    boundRight = lilies.getLilyPos(lilies.rightLily) + frog.offX;\r\n\r\n    visibleFrogs = [0];\r\n}"],"names":["drawBackground","envType","cam","x","w","background_x_0","background_x_1","bgWidth","bgScale","generalState","backgroundY","screenSizeY","image","bg","toCamCoords","sX","sY","background","linearEnvironment2D","Camera","screenSizeX","currScale","scale","lilies","LinearLilies2D","gfx","calcLeftLily","calcStartLily","frogDimX","width","frogDimY","height","boundLeft","boundRight","startLily","startLilyX","startLilyY","getLilyPos","lilyNumPosX","lilyDimX","lilyNumPosY","gravity","kerplunked","buoyancy","kerplunkSpeed","frogs","bugs","player","Player","Frog","characterProfile","frog","instantiateCharacter","toggleLock","visibleFrogs","cyclicEnvironment","environment","CyclicLilies","Array","numLilies","fill","linearEnvironment","lilyScale","scaleRatio","LinearLilies","leftLily","offX","rightLily"],"version":3,"file":"index.6da87c52.js.map"}