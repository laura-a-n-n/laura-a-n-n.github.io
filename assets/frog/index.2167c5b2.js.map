{"mappings":"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","sources":["public/src/client/gui.js"],"sourcesContent":["class GUI {\r\n\tconstructor() {\r\n\t\tthis.initialize();\r\n\t\tthis.calculate();\r\n\r\n\t\tthis.cyclicMode = false;\r\n\t}\r\n\r\n\tinitialize(vals = [1, 2, 3, 4]) {\r\n\t\tthis.init = {};\r\n\t\tthis.init['quickFrog'] = {'draw': false, 'obj': {}};\r\n\r\n\t\tconst guiRef = this;\r\n\r\n\t\tfor (const [j, letter] of Object.entries(['Q', 'W', 'E', 'R'])) {\r\n\t\t\tconst i = vals[Number(j)];\r\n\t\t\tconst name = letter + 'Button';\r\n\r\n\t\t\tthis.init['quickFrog']['obj'][name] = {\r\n\t\t\t\tname: name,\r\n\t\t\t\tfrogBound: i,\r\n\t\t\t\tisPressed: false,\r\n\r\n\t\t\t\tx: (Number(j)) / 8 + Number(j) / 128,\r\n\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\twidth: 1 / 8,\r\n\t\t\t\taspect: 'square',\r\n\t\t\t\tcornerRadius: 25,\r\n\r\n\t\t\t\timage: gfx['button'],\r\n\t\t\t\tfitImage: true,\r\n\t\t\t\timageScale: .95,\r\n\t\t\t\tstroke: color(0, 0),\r\n\t\t\t\tcolor: color(0, 0),\r\n\r\n\t\t\t\ttextColor: '#000',\r\n\t\t\t\ttextFont: pixelFont,\r\n\t\t\t\ttextSize: 32,\r\n\t\t\t\ttextScaled: true,\r\n\t\t\t\ttext: '\\n\\n' + i.toString(),\r\n\r\n\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t// (TEMP?) BUG FIX\r\n\t\t\t\t\t// verify mouse button isn't in invalid range\r\n\t\t\t\t\t// this prevents shaking\r\n\t\t\t\t\tlet mouseValidY = (mouseY < this.y) /* top bound */ || (mouseY > 2 * this.y + this.height) /* lower bound */;\r\n\t\t\t\t\tlet mouseValidX = (mouseX < this.x) /* left bound*/ || (mouseX > this.x + this.width)      /* right bound */; // standard stuff\r\n\t\t\t\t\tlet mouseValid = mouseValidX || mouseValidY;\r\n\r\n\t\t\t\t\tif (!levelFailed) controlsEnabled = true;\r\n\r\n\t\t\t\t\tif (mouseValid && puzzleMode && (!buttonPressed || (this.name != buttonPressed))) {\r\n\t\t\t\t\t\tif (!levelWon && !buttonPressed && frog.lily == 0) frog.type = 0;\r\n\t\t\t\t\t\telse if (!levelWon) frog.type = player.gui.obj.quickFrog.obj[buttonPressed].frogBound;\r\n\r\n\t\t\t\t\t\tcursor('default');\r\n\t\t\t\t\t\tthis.playedSound = false;\r\n\t\t\t\t\t\tthis.image = gfx.button;\r\n\t\t\t\t\t\tthis.stroke = color(0, 0);\r\n\t\t\t\t\t\tthis.color = color(0, 0);\r\n\t\t\t\t\t\tthis.imageScale = .95;\r\n\t\t\t\t\t\tthis.y =  screenSizeY / 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonHover: function() {\r\n\t\t\t\t\tif (puzzleMode) {\r\n\t\t\t\t\t\tcontrolsEnabled = false;\r\n\t\t\t\t\t\tcursor('grab');\r\n\t\t\t\t\t\tif (!this.playedSound) sfx.tick.play();\r\n\t\t\t\t\t\tthis.playedSound = true;\r\n\t\t\t\t\t\tthis.image = gfx.buttonToggled;\r\n\t\t\t\t\t\tthis.imageScale = .97;\r\n\t\t\t\t\t\tthis.y = screenSizeY / 28;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (frog.lily == 0) frog.type = this.frogBound;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonPress: function() {\r\n\t\t\t\t\tif (puzzleMode && !levelWon && !levelFailed) {\r\n\t\t\t\t\t\tif (buttonPressed) mgr.scene.oScene.resetLevel();\r\n\t\t\t\t\t\tbuttonPressed = this.name;\r\n\r\n\t\t\t\t\t\tsfx.tick.play();\r\n\t\t\t\t\t\tfrog.type = this.frogBound;\r\n\t\t\t\t\t\tthis.stroke = 'rgba(100, 255, 100, 1)';\r\n\t\t\t\t\t\tthis.color = 'rgba(100, 255, 100, 1)';\r\n\t\t\t\t\t\tthis.imageScale = .98;\r\n\r\n\t\t\t\t\t\t//if (!guiRef.cyclicMode)\r\n\t\t\t\t\t\tcontrolsEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\textraDraw: function() {\r\n\t\t\t\t\t// draw froggy grid\r\n\t\t\t\t\tconst angle = 2 * PI / this.frogBound;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.frogBound; i++) {\r\n\t\t\t\t\t\tlet x = this.x + this.width / 5 * (2.1 + Math.cos(angle * i));\r\n\t\t\t\t\t\tlet y = this.y + this.width / 5 * (1.5 + Math.sin(angle * i));\r\n\r\n\t\t\t\t\t\timage(gfx['bby'], x, y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.init['buttons'] = {\r\n\t\t\tdraw: false,\r\n\r\n\t\t\tobj: {\r\n\t\t\t\t'inventoryButton': {\r\n\t\t\t\t\tx: 1 / 64,\r\n\t\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\t\twidth: 1 / 24,\r\n\t\t\t\t\taspect: 'square',\r\n\r\n\t\t\t\t\timage: gfx['inventoryButton'],\r\n\t\t\t\t\tfitImage: true,\r\n\t\t\t\t\ttext: '',\r\n\r\n\t\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t\tthis.color = '#000';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonHover: function() {\r\n\t\t\t\t\t\tthis.color = '#222';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonRelease: function() {\r\n\t\t\t\t\t\tplayer.gui.obj.quickFrog.draw = !player.gui.obj.quickFrog.draw;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\textraDraw: function() {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.init['sound'] = {\r\n\t\t\tdraw: true,\r\n\r\n\t\t\tobj: {\r\n\t\t\t\t'soundButton': {\r\n\t\t\t\t\tx: .96,\r\n\t\t\t\t\ty: .93,\r\n\r\n\t\t\t\t\twidth: 1 / 25,\r\n\t\t\t\t\taspect: 'square',\r\n\r\n\t\t\t\t\tcolor: color(0, 0),\r\n\t\t\t\t\tstroke: color(0, 0),\r\n\t\t\t\t\timage: getOutputVolume() && gfx.soundOn || gfx.soundOff,\r\n\t\t\t\t\tfitImage: false,\r\n\t\t\t\t\ttext: '',\r\n\r\n\t\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t\tthis.width = screenSizeX / 28;\r\n\t\t\t\t\t\tthis.height = this.width;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonHover: function() {\r\n\t\t\t\t\t\tthis.width = screenSizeX / 25;\r\n\t\t\t\t\t\tthis.height = this.width;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonRelease: function() {\r\n\t\t\t\t\t\tlet newVol = Math.abs(getOutputVolume() - 1.); // 0 -> 1; 1 -> 0\r\n\t\t\t\t\t\tthis.image = newVol && gfx.soundOn || gfx.soundOff; // 1 -> on; 0 -> off\r\n\r\n\t\t\t\t\t\toutputVolume(newVol); // set global volume\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\textraDraw: function() {}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// 'fxButton': {\r\n\t\t\t\t// \tx: 7 / 128,\r\n\t\t\t\t// \ty: 0,\r\n\r\n\t\t\t\t// \twidth: 1 / 16,\r\n\t\t\t\t// \taspect: 'square',\r\n\r\n\t\t\t\t// \tcolor: color(0, 0),\r\n\t\t\t\t// \tstroke: color(0, 0),\r\n\t\t\t\t// \timage: muted && gfx.speakerOff || gfx.speaker,\r\n\t\t\t\t// \tfitImage: true,\r\n\t\t\t\t// \ttext: '',\r\n\r\n\t\t\t\t// \tonOutside: function() {\r\n\t\t\t\t// \t\tthis.width = screenSizeX / 32;\r\n\t\t\t\t// \t},\r\n\r\n\t\t\t\t// \tonHover: function() {\r\n\t\t\t\t// \t\tthis.width = screenSizeX / 28;\r\n\t\t\t\t// \t},\r\n\r\n\t\t\t\t// \tonRelease: function() {\r\n\t\t\t\t// \t\tmuted = !muted;\r\n\t\t\t\t// \t\tthis.image = muted && gfx.speakerOff || gfx.speaker;\r\n\t\t\t\t// \t},\r\n\r\n\t\t\t\t// \textraDraw: function() {}\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcalculate() {\r\n\t\tthis.obj = {};\r\n\r\n\t\tfor (const [typeName, objType] of Object.entries(this.init)) {\r\n\t\t\tthis.obj[typeName] = {draw: objType.draw, obj: {}};\r\n\r\n\t\t\tfor (const [objName, obj] of Object.entries(objType.obj)) {\r\n\t\t\t\t// scale to canvas size\r\n\t\t\t\tobj.x *= screenSizeX;\r\n\t\t\t\tobj.y *= screenSizeY;\r\n\r\n\t\t\t\tobj.width *= screenSizeX;\r\n\r\n\t\t\t\tif (obj.aspect == 'square') obj.height = obj.width;\r\n\t\t\t\telse obj.height *= screenSizeY;\r\n\r\n\t\t\t\t// copy properties to Clickable object\r\n\t\t\t\tthis.obj[typeName]['obj'][objName] = new Clickable();\r\n\t\t\t\tObject.assign(this.obj[typeName]['obj'][objName], obj);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// frame() \r\n\r\n\tdraw() {\r\n\t\tfor (const [typeName, objType] of Object.entries(this.obj)) {\r\n\t\t\tif (objType.draw) {\r\n\t\t\t\tfor (const [objName, obj] of Object.entries(objType['obj'])) {\r\n\t\t\t\t\tobj.draw();\r\n\t\t\t\t\tobj.extraDraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"names":["GUI","constructor","this","initialize","calculate","cyclicMode","vals","init","draw","obj","j","letter","Object","entries","i1","Number","name","frogBound","isPressed","x","y","width","aspect","cornerRadius","image","gfx","fitImage","imageScale","stroke","color","textColor","textFont","pixelFont","textSize","textScaled","text","toString","onOutside","mouseValidY","mouseY","height","mouseValidX","mouseX","levelFailed","controlsEnabled","puzzleMode","buttonPressed","levelWon","frog","lily","type","player","gui","quickFrog","cursor","playedSound","button","screenSizeY","onHover","sfx","tick","play","buttonToggled","onPress","mgr","scene","oScene","resetLevel","extraDraw","angle","PI","i","Math","cos","sin","inventoryButton","onRelease","soundButton","getOutputVolume","soundOn","soundOff","screenSizeX","newVol","abs","outputVolume","typeName","objType","objName","Clickable","assign"],"version":3,"file":"index.2167c5b2.js.map"}