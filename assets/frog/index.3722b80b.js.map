{"mappings":"AAAA,SAASA,sBAERC,aAAaC,YAAcC,kBAC3BF,aAAaG,GAAKC,IAAQ,GAE1BJ,aAAaK,eAAiB,WAC7BC,QAAU,EAAIC,YAAcH,IAAID,GAAGK,MACnCC,MAAMT,aAAaG,IAAKC,IAAID,GAAGK,MAAQ,GAAIF,QAAUF,IAAID,GAAGO,OAAS,GAAI,EAAIH,YAAaD,QAAUF,IAAID,GAAGO,SAG5GC,OAAOC,OAAOC,KAAMb,cAEpBc,eAAiB,EAEjBD,KAAKE,gBAAkB,WACtBC,YAAa,EAEbC,OAAOC,OAASd,IAAU,KAC1Ba,OAAOE,UAAY,GACnBF,OAAOG,QAAwB,IAAdb,YACjBU,OAAOI,QAAwB,GAAdC,YACjBL,OAAOM,YAA4B,GAAdhB,YACrBU,OAAOO,YAA4B,GAAdF,YAErBG,OAAOC,YAAcb,KAAKc,UAAUD,YACpCD,OAAOG,eAAgB,EACvBH,OAAOI,YAAcC,MAAM,GAC3BL,OAAOM,WAAa,GACpBN,OAAOO,WAAa,EACpBP,OAAOQ,YAAc,GACrBR,OAAOS,YAAc,GAErBT,OAAOU,IAAIC,YAAa,EAExBC,KAAOZ,OAAOa,uBAEdC,eAAgB,EAChBC,WAAa,EACbC,cAAgB,EAChBC,aAAc,EACdC,UAAW,EAEXN,KAAKO,KAAO,EAEZC,iBAAkB,EAElBpB,OAAOU,IAAIW,WAAWjC,KAAKc,UAAUoB,UACrCtB,OAAOU,IAAIa,YACXvB,OAAOwB,IAAIC,WAAsB,WAAI,EACrCzB,OAAOU,IAAIgB,IAAIC,UAAUC,MAAO,EAChC5B,OAAO6B,YAAc7B,OAAO8B,UAAUC,YAAYC,SAAW,EAE7DR,IAAIS,UAAW,EAEfzC,OAAO0C,gBAAiB,EACxB1C,OAAO2C,aAAe,GAEtBC,KAAKC,KAAK,IAAIC,IAAI9C,OAAQb,IAAW,MAAGS,KAAKc,UAAUD,YAAa,IAAK,UACzEmC,KAAK,GAAGG,MAAQH,KAAK,GAAGI,KAAO,EAC/BJ,KAAK,GAAGK,UAAY,SAASf,GAAO,OAAOtC,KAAKsD,KAAOlD,OAAOmD,WAAajB,EAAIgB,OAGhFtD,KAAKwD,WAAa,WACjB3B,aAAc,EACdH,eAAgB,EAChBC,WAAa,EAEb8B,WAAajC,KAAKkC,OAElBlC,KAAOZ,OAAOa,uBAEdD,KAAKkC,OAASD,YAGfzD,KAAK2D,gBAAkB,WAGtBnC,KAAKoC,MAAQ,IAET/B,aAAeC,YAClBN,KAAKO,KAAO,EACZJ,YAAckC,UAAY,IAEtBlC,WAAaC,gBAChB5B,KAAKwD,aAED1B,WACH9B,KAAK8D,eAAiB,WAAaC,WAAW,IAC9CC,IAAIC,UAAUC,gBAKZrC,cAAgBL,KAAK2C,WAAa3C,KAAK8B,KAAO1C,OAAOC,aAAemC,KAAKoB,OAAS,GACtFpC,iBAAkB,EAClBH,aAAc,EACdL,KAAK6C,QAAU7C,KAAKO,KACpBP,KAAK8C,UAAW,GACLzC,aAAgBC,UAAaN,KAAK2C,WAA4B,GAAfnB,KAAKoB,SAC/DxD,OAAOG,eAAgB,EAGvBS,KAAK+C,UAAUtB,KAAK,GACpBnB,UAAW,EACXN,KAAKM,UAAW,EAChB7B,iBACAuB,KAAK8C,UAAW,IAIlBtE,KAAK8D,eAAiB,WACjBtC,KAAK2C,YAAaK,OAAO,KAAMC,KAAK,MACxC7E,MAAML,IAAW,MAAG,EAAG,EAAwB,GAArBA,IAAW,MAAEI,MAAkC,GAAtBJ,IAAW,MAAEM,QAChE6E,KAAKzE,eAAe0E,WAAY,GAA0B,GAArBpF,IAAW,MAAEI,MAAkC,GAAtBJ,IAAW,MAAEM,OAAc,EAAI","sources":["public/src/scene/cyclic-factors.js"],"sourcesContent":["function CyclicFactorsPuzzle() {\r\n\r\n\tgeneralState.envFunction = cyclicEnvironment;\r\n\tgeneralState.bg = gfx['bg'];\r\n\r\n\tgeneralState.drawBackground = function() {\r\n\t\tbgScale = 2 * screenSizeX / gfx.bg.width;\r\n\t\timage(generalState.bg, -gfx.bg.width / 5, -bgScale * gfx.bg.height * .6, 2 * screenSizeX, bgScale * gfx.bg.height);\r\n\t}\r\n\r\n\tObject.assign(this, generalState);\r\n\r\n\tpuzolsComplete = 0;\r\n\r\n\tthis.particularSetup = function() {\r\n\t\tpuzzleMode = true;\r\n\r\n\t\tlilies.sprite = gfx['lily']\r\n\t\tlilies.lilyScale = .5;\r\n\t\tlilies.radiusX = screenSizeX * .18;\r\n\t\tlilies.radiusY = screenSizeY * .1;\r\n\t\tlilies.lilyCenterX = screenSizeX * .4;\r\n\t\tlilies.lilyCenterY = screenSizeY * .8;\r\n\r\n\t\tplayer.specialLily = this.sceneArgs.specialLily;\r\n\t\tplayer.specialNumber = true;\r\n\t\tplayer.numberColor = color(0);\r\n\t\tplayer.numOffsetY = 50;\r\n\t\tplayer.numOffsetX = 5;\r\n\t\tplayer.sizeSpecial = 30;\r\n\t\tplayer.specialOffY = 35;\r\n\r\n\t\tplayer.gui.cyclicMode = true;\r\n\r\n\t\tfrog = player.instantiateCharacter();\r\n\r\n\t\tbuttonPressed = false;\r\n\t\twaitFrames = 0;\r\n\t\tmaxWaitFrames = 4;\r\n\t\tlevelFailed = false;\r\n\t\tlevelWon = false;\r\n\r\n\t\tfrog.type = 0;\r\n\r\n\t\tcontrolsEnabled = false;\r\n\r\n\t\tplayer.gui.initialize(this.sceneArgs.initVals);\r\n\t\tplayer.gui.calculate();\r\n\t\tplayer.cam.guiOptions['helpLines'] = false;\r\n\t\tplayer.gui.obj.quickFrog.draw = true;\r\n\t\tplayer.specialOffX = player.character.environment.lilyDimX / 3;\r\n\r\n\t\tcam.anchored = true; \r\n\t\t\r\n\t\tlilies.negativeLilies = false;\r\n\t\tlilies.lilySpacingX = 80;\r\n\r\n\t\tbugs.push(new Bug(lilies, gfx['snail'], this.sceneArgs.specialLily, .15, 'snail'));\r\n\t\tbugs[0].posY -= bugs[0].dimY / 3;\r\n\t\tbugs[0].isTouched = function(obj) { return this.lily % lilies.numLilies == obj.lily; };\r\n\t}\r\n\r\n\tthis.resetLevel = function() {\r\n\t\tlevelFailed = false;\r\n\t\tbuttonPressed = false;\r\n\t\twaitFrames = 0;\r\n\r\n\t\tlastHunger = frog.hunger;\r\n\r\n\t\tfrog = player.instantiateCharacter();\r\n\r\n\t\tfrog.hunger = lastHunger;\r\n\t}\r\n\r\n\tthis.particularFrame = function() {\r\n\t\t//controlsEnabled = false;\r\n\r\n\t\tfrog.scale = .5;\r\n\r\n\t\tif (levelFailed || levelWon) {\r\n\t\t\tfrog.type = 0;\r\n\t\t\twaitFrames += deltaTime / 1000;\r\n\t\t\t\r\n\t\t\tif (waitFrames > maxWaitFrames) {\r\n\t\t\t\tthis.resetLevel();\r\n\r\n\t\t\t\tif (levelWon) {\r\n\t\t\t\t\tthis.particularDraw = function() { background(0); } // fix glitchy screen\r\n\t\t\t\t\tmgr.showScene(FrogHeaven);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!levelFailed && !frog.tooHungry && frog.lily > player.specialLily && bugs.length > 0) {\r\n\t\t\tcontrolsEnabled = false;\r\n\t\t\tlevelFailed = true;\r\n\t\t\tfrog.number += frog.type;\r\n\t\t\tfrog.drawType = false;\r\n\t\t} else if (!levelFailed && !levelWon && !frog.tooHungry && bugs.length == 0) {\r\n\t\t\tplayer.specialNumber = false;\r\n\t\t\t// epic! wonned!\r\n\t\t\t//frog.number -= frog.type * 2;\r\n\t\t\tfrog.showHeart.push(1);\r\n\t\t\tlevelWon = true;\r\n\t\t\tfrog.levelWon = true;\r\n\t\t\tpuzolsComplete++;\r\n\t\t\tfrog.drawType = false;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.particularDraw = function() {\r\n\t\tif (frog.tooHungry) { stroke(255); fill(255); } \r\n\t\timage(gfx['snail'], 5, 0, gfx['snail'].width * .1, gfx['snail'].height * .1);\r\n\t\ttext(puzolsComplete.toString(), 15 + gfx['snail'].width * .1, gfx['snail'].height * .1 / 2 + 10)\r\n\t}\r\n}"],"names":["CyclicFactorsPuzzle","generalState","envFunction","cyclicEnvironment","bg","gfx","drawBackground","bgScale","screenSizeX","width","image","height","Object","assign","this","puzolsComplete","particularSetup","puzzleMode","lilies","sprite","lilyScale","radiusX","radiusY","screenSizeY","lilyCenterX","lilyCenterY","player","specialLily","sceneArgs","specialNumber","numberColor","color","numOffsetY","numOffsetX","sizeSpecial","specialOffY","gui","cyclicMode","frog","instantiateCharacter","buttonPressed","waitFrames","maxWaitFrames","levelFailed","levelWon","type","controlsEnabled","initialize","initVals","calculate","cam","guiOptions","obj","quickFrog","draw","specialOffX","character","environment","lilyDimX","anchored","negativeLilies","lilySpacingX","bugs","push","Bug","posY","dimY","isTouched","lily","numLilies","resetLevel","lastHunger","hunger","particularFrame","scale","deltaTime","particularDraw","background","mgr","showScene","FrogHeaven","tooHungry","length","number","drawType","showHeart","stroke","fill","text","toString"],"version":3,"file":"index.3722b80b.js.map"}