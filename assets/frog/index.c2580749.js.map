{"mappings":"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","sources":["public/src/scene/menu.js"],"sourcesContent":["function Menu() {\r\n  /* setup (っ◔◡◔)っ ❤ */\r\n  this.setup = function() {\r\n    // canvas\r\n    calcWindowBounds();\r\n\r\n    // scene manager\r\n    mgr = this.sceneManager;\r\n\r\n    // get injected properties\r\n    gfx = mgr.gfx;\r\n    pixelFont = mgr.pixelFont;\r\n\r\n    // temp player\r\n    controlsEnabled = false;\r\n    puzzleMode = false;\r\n    snailPuzzle = false;\r\n    muted = false;\r\n    levelFailed = false;\r\n    levelWon = false;\r\n    buttonPressed = false;\r\n    tempPlayer = new Player();\r\n\r\n    // background size\r\n    bgRatio = screenSizeX / gfx['bgMenu'].width;\r\n    bgScale = 2;\r\n\r\n    // background pan\r\n    trajX = 0.5;\r\n    trajY = 0.5;\r\n\r\n    locX = -500;\r\n    locY = -500;\r\n\r\n    bgWidth = gfx.bgMenu.width;\r\n    bgHeight = gfx.bgMenu.height;\r\n    if (!isMobile) {\r\n      bgWidth /= 2;\r\n      bgHeight /= 2;\r\n    } else {\r\n      bgWidth *= 2;\r\n      bgHeight *= 2;\r\n    }\r\n\r\n    // global fade\r\n    globalOpacity = 0;\r\n    nothingDt = 4;\r\n    countTime = 0;\r\n    exiting = false;\r\n    displayFrogress = false;\r\n    startTime = millis();\r\n\r\n    // bugs\r\n    bugsN = 5;\r\n    bugsX = Array(bugsN).fill(0);\r\n    bugsY = Array(bugsN).fill(0);\r\n    bugsTX = Array(bugsN).fill(1);\r\n    bugsTY = Array(bugsN).fill(-1);\r\n    beeSprite = Array(bugsN);\r\n\r\n    for (let i = 0; i < bugsN; i++) {\r\n      bugsX[i] = Math.floor(Math.random() * screenSizeX);\r\n      bugsY[i] = Math.floor(Math.random() * screenSizeY);\r\n      bugsTX[i] = (Math.random() > .5) ? 1 : -1;\r\n      bugsTY[i] = (Math.random() > .5) ? 1 : -1;\r\n    }\r\n\r\n    // create game!\r\n    let canvas = createCanvas(screenSizeX, screenSizeY);\r\n    canvas.parent('game-container');\r\n\r\n    imX = screenSizeX;\r\n    imY = bgRatio * gfx.bgMenu.height;\r\n\r\n    // music\r\n    mgr.prop.song.setVolume(mgr.prop.musicVol);\r\n    mgr.prop.song.loop();\r\n  }\r\n\r\n  /* events (/◕ヮ◕)/ */\r\n\r\n  this.windowResized = function() {\r\n    calcWindowBounds();\r\n    imX = screenSizeX;\r\n    imY = bgRatio * gfx.bgMenu.height;\r\n\r\n    resizeCanvas(screenSizeX, screenSizeY);\r\n  }\r\n\r\n  this.goToFade = function() { \r\n    if (typeof startTime !== 'undefined') {\r\n      if (millis() - startTime > 1000 && (!cl_lastClicked)) { \r\n        exiting = true; \r\n      }\r\n    }\r\n  }\r\n  this.goToGame = function() { this.sceneManager.showScene(OpenLinear, {step: 0}); }\r\n  this.mouseClicked = this.goToFade;\r\n  this.keyPressed = this.goToFade;\r\n\r\n  /* main loop ✨(っ◔︣◡◔᷅)っc(◕︣◡◕᷅c)✨ */\r\n\r\n  this.frame = function() {\r\n    // update background pan\r\n    [velX, velY] = [trajX, trajY];\r\n    [destX, destY] = [locX + velX, locY + velY];\r\n    if ((destX >= 0) || (destX <= -bgWidth * 0.98 / 2)) trajX *= -1;\r\n    else locX = destX;\r\n    if ((destY >= 0) || (destY <= -bgHeight / 2)) trajY *= -1;\r\n    else locY = destY;\r\n\r\n    // update bugs\r\n    for (let i = 0; i < bugsN; i++) {\r\n      bugsX[i] += bugsTX[i];\r\n      bugsY[i] += bugsTY[i];\r\n\r\n      if (bugsX[i] > screenSizeX) bugsTX[i] = -1;\r\n      else if (bugsX[i] < 0) bugsTX[i] = 1;\r\n\r\n      if (bugsY[i] > screenSizeY) bugsTY[i] = -1;\r\n      else if (bugsY[i] < 0) bugsTY[i] = 1;\r\n\r\n      beeSprite[i] = (bugsTX[i] == 1) ? 'beeRight' : 'beeLeft';\r\n    }\r\n\r\n    if (exiting) {\r\n      globalOpacity += deltaTime / 10;\r\n\r\n      if (globalOpacity >= 255) {\r\n        countTime += deltaTime / 1000;\r\n\r\n        displayFrogress = true;\r\n\r\n        if (countTime >= nothingDt) {\r\n            this.goToGame();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.draw = function() {\r\n    this.frame();\r\n\r\n    // background\r\n    image(gfx.bgMenu, Math.round(locX), Math.round(locY), bgWidth, bgHeight);\r\n\r\n    // bugs >-<\r\n    for (let i = 0; i < bugsN; i++) {\r\n        push();\r\n\r\n        scale(.1);\r\n        translate(bugsX[i] / .1, bugsY[i] / .1);\r\n        image(gfx[beeSprite[i]], 0, 0);\r\n\r\n        pop();\r\n    }\r\n    tempPlayer.gui.draw();\r\n\r\n    // text\r\n    stroke(255);\r\n    fill(255);\r\n    textFont(pixelFont);\r\n\r\n    push();\r\n    textSize(128);\r\n    text('Frog World', 1.8 * screenSizeX / 7, screenSizeY / 6);\r\n    pop();\r\n\r\n    push();\r\n    textSize(64);\r\n    strokeWeight(1);\r\n    c = color(255, 127 + Math.sin((frameCount / 50)) * 127);\r\n    fill(c);\r\n    stroke(c);\r\n    text('begin?', 4 * screenSizeX / 5, 3 * screenSizeY / 4);\r\n    pop();\r\n\r\n    textSize(32);\r\n    text('lead artist: kyle lynn', 5, screenSizeY - 48);\r\n    text('developer/frog artist: laura ann', 5, screenSizeY - 16);\r\n    \r\n    background(0, globalOpacity);\r\n\r\n    if (displayFrogress) {\r\n        image(gfx['snail'], screenSizeX * (-.1 + 2 * countTime / nothingDt) - gfx['snail'].width / 2,\r\n                            screenSizeY / 2 - gfx['snail'].height / 2);\r\n        text('Loading in frogress...', screenSizeX / 2 - gfx['snail'].width / 2 - 20,\r\n                                       screenSizeY / 2 + gfx['snail'].height / 2 + 20);\r\n    }\r\n  }\r\n}"],"names":["Menu","this","setup","calcWindowBounds","mgr","sceneManager","gfx","pixelFont","controlsEnabled","puzzleMode","snailPuzzle","muted","levelFailed","levelWon","buttonPressed","tempPlayer","Player","bgRatio","screenSizeX","width","bgScale","trajX","trajY","locX","locY","bgWidth","bgMenu","bgHeight","height","isMobile","globalOpacity","nothingDt","countTime","exiting","displayFrogress","startTime","millis","bugsN","bugsX","Array","fill","bugsY","bugsTX","bugsTY","beeSprite","i","Math","floor","random","screenSizeY","createCanvas","parent","imX","imY","prop","song","setVolume","musicVol","loop","windowResized","resizeCanvas","goToFade","cl_lastClicked","goToGame","showScene","OpenLinear","step","mouseClicked","keyPressed","frame","velX","velY","destX","destY","deltaTime","draw","image","round","push","scale","translate","pop","gui","stroke","textFont","textSize","text","strokeWeight","c","color","sin","frameCount","background"],"version":3,"file":"index.c2580749.js.map"}