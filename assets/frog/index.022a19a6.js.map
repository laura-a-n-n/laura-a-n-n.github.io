{"mappings":"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","sources":["public/src/scene/environment.js"],"sourcesContent":["function drawBackground() {\r\n    if (envType == 'LinearLilies') {\r\n        background(255);\r\n\r\n        if (cam.x - cam.w / 2 <= background_x_0) {\r\n            if (cam.x - cam.w / 2 <= background_x_1) {\r\n                background_x_0 = background_x_1;\r\n            }\r\n\r\n            background_x_1 = background_x_0 - bgWidth;\r\n        } else if (cam.x - cam.w / 2 >= background_x_0) {\r\n            if (cam.x - cam.w / 2 >= background_x_1) {\r\n                background_x_0 = background_x_1;\r\n            }\r\n\r\n            background_x_1 = background_x_0 + bgWidth;\r\n        }\r\n\r\n        bgScale = generalState.bgScale;\r\n        if (bgScale != 1) {\r\n            backgroundY = -bgScale * screenSizeY / 2;\r\n        } else backgroundY = 0;\r\n\r\n        image(bg, ...cam.toCamCoords(background_x_0, backgroundY, sX = false, sY = false), bgScale * bgWidth, bgScale * screenSizeY);\r\n        image(bg, ...cam.toCamCoords(background_x_1, backgroundY, sX = false, sY = false), bgScale * bgWidth, bgScale * screenSizeY);\r\n        \r\n        /* ~ water ~ */\r\n        // stroke(0, 100, 255);\r\n        // fill(0, 100, 255);\r\n        // rect(0, screenSizeY * .5, screenSizeX, screenSizeY);\r\n    } else if (envType == 'CyclicLilies') {\r\n        background(200);\r\n    } else if (envType == 'LinearLilies2D') {\r\n        background(0);\r\n    }\r\n}\r\n\r\nfunction linearEnvironment2D() {\r\n    // camera\r\n    cam = new Camera(screenSizeX / 2, screenSizeY / 2, screenSizeX, screenSizeY);\r\n    currScale = cam.scale;\r\n    envType = 'LinearLilies2D';\r\n\r\n    // create lilies\r\n    // lilies = new LinearLilies(cam, gfx['lily'], lilyScale, 60);\r\n    // lilies.calcLeftLily();\r\n    // lilies.calcStartLily();\r\n    lilies = new LinearLilies2D(cam, gfx['lilyDown']);\r\n\r\n    lilies.calcLeftLily();\r\n    lilies.calcStartLily();\r\n\r\n    // frog dimensions\r\n    frogDimX = gfx['bby'].width;\r\n    frogDimY = gfx['bby'].height;\r\n    // frogOffX = lilies.trueLilySize[0] / 4;\r\n    // frogOffY = -(frogDimY / 2 + lilies.lilyDimY / 2);\r\n\r\n    // scene bounds\r\n    boundLeft = 0;\r\n    boundRight = screenSizeX;\r\n\r\n    startLily = 0;\r\n    [startLilyX, startLilyY] = lilies.getLilyPos(startLily, 5);\r\n\r\n    // mark numbers\r\n    lilyNumPosX = startLilyX; + lilies.lilyDimX / 2;\r\n    lilyNumPosY = startLilyY; + 60;\r\n\r\n    // physics\r\n    gravity = 0;\r\n    kerplunked = [];\r\n    buoyancy = .2;\r\n    kerplunkSpeed = 5;\r\n\r\n    // arrays\r\n    frogs = [];\r\n    bugs = [];\r\n\r\n    /* ~ bugs ~ */\r\n\r\n    // make an fly!\r\n    // bugIndices = [];\r\n    // for (let i = 0; i < 10; i++) {\r\n    //   subtract = lilies.negativeLilies ? 25 : -startLily;\r\n    //   bugIndex = Math.floor(Math.random() * 10) - subtract;\r\n\r\n    //   if (bugIndices.indexOf(bugIndex) < 0 && bugIndex != startLily) {\r\n    //       bugIndices.push(bugIndex);\r\n\r\n    //       flyPos = lilies.getLilyPos(bugIndex);\r\n    //       flyPos[1] -= 30;\r\n\r\n    //       bugs.push(new Bug(gfx['fly'], ...flyPos));\r\n    //       console.log(bugs[i], flyPos);\r\n    //   }\r\n    // }\r\n\r\n    // player\r\n    player = new Player(cam, Frog);\r\n\r\n    player.characterProfile = [\r\n        lilies,\r\n        gfx['bby'],\r\n        0,\r\n        startLily\r\n    ];\r\n\r\n    frog = player.instantiateCharacter();\r\n    frogs[0] = frog;\r\n    cam.toggleLock(frog);\r\n\r\n    //player.assignQuest(flyQuest)\r\n\r\n    visibleFrogs = [0];\r\n}\r\n\r\nfunction cyclicEnvironment() {\r\n    environment = 'cyclic';\r\n\r\n    // camera\r\n    cam = new Camera(screenSizeX / 2, screenSizeY / 2, screenSizeX, screenSizeY);\r\n    currScale = cam.scale;\r\n\r\n    // create lilies\r\n    // lilies = new LinearLilies(cam, gfx['lily'], lilyScale, 60);\r\n    // lilies.calcLeftLily();\r\n    // lilies.calcStartLily();\r\n    lilies = new CyclicLilies(cam, gfx['lily']);\r\n\r\n    // frog dimensions\r\n    frogDimX = gfx['bby'].width;\r\n    frogDimY = gfx['bby'].height;\r\n\r\n    // scene bounds\r\n    boundLeft = 0;\r\n    boundRight = screenSizeX;\r\n\r\n    startLily = 0;\r\n    [startLilyX, startLilyY] = lilies.getLilyPos(startLily);\r\n\r\n    // mark numbers\r\n    lilyNumPosX = startLilyX; + lilies.lilyDimX / 2;\r\n    lilyNumPosY = startLilyY; + 60;\r\n\r\n    // physics\r\n    gravity = 0;\r\n    kerplunked = Array(lilies.numLilies).fill(0.);\r\n    buoyancy = .2;\r\n    kerplunkSpeed = 20;\r\n\r\n    // arrays\r\n    frogs = [];\r\n    bugs = [];\r\n\r\n    /* ~ bugs ~ */\r\n\r\n    // make an fly!\r\n    // bugIndices = [];\r\n    // for (let i = 0; i < 10; i++) {\r\n    //   subtract = lilies.negativeLilies ? 25 : -startLily;\r\n    //   bugIndex = Math.floor(Math.random() * 10) - subtract;\r\n\r\n    //   if (bugIndices.indexOf(bugIndex) < 0 && bugIndex != startLily) {\r\n    //       bugIndices.push(bugIndex);\r\n\r\n    //       flyPos = lilies.getLilyPos(bugIndex);\r\n    //       flyPos[1] -= 30;\r\n\r\n    //       bugs.push(new Bug(gfx['fly'], ...flyPos));\r\n    //       console.log(bugs[i], flyPos);\r\n    //   }\r\n    // }\r\n\r\n    // player\r\n    player = new Player(cam, Frog);\r\n\r\n    player.characterProfile = [\r\n        lilies,\r\n        gfx['bby'],\r\n        0,\r\n        startLily\r\n    ];\r\n\r\n    frog = player.instantiateCharacter();\r\n    frogs[0] = frog;\r\n    //cam.toggleLock(frog);\r\n\r\n    //player.assignQuest(flyQuest)\r\n\r\n    visibleFrogs = [0];\r\n}\r\n\r\nfunction linearEnvironment(lilyScale = 1) {\r\n    // camera\r\n    cam = new Camera(screenSizeX / 2, screenSizeY / 2, screenSizeX, screenSizeY);\r\n    //cam.anchored = true;\r\n\r\n    bg = generalState.bg;\r\n\r\n    scaleRatio = screenSizeY / bg.height;\r\n    bgWidth = scaleRatio * bg.width;\r\n\r\n    // create lilies\r\n    lilies = new LinearLilies(cam, gfx['lilyDown'], .2, 200);\r\n    lilies.calcLeftLily();\r\n    lilies.calcStartLily();\r\n\r\n    startLily = lilies.startLily;\r\n    [startLilyX, startLilyY] = lilies.getLilyPos(startLily);\r\n\r\n    // mark numbers\r\n    lilyNumPosX = startLilyX; + lilies.lilyDimX / 2;\r\n    lilyNumPosY = startLilyY;\r\n\r\n    // arrays\r\n    frogs = [];\r\n    bugs = [];\r\n\r\n    // player\r\n    player = new Player(cam, Frog);\r\n\r\n    player.characterProfile = [\r\n        lilies,\r\n        gfx['bby'],\r\n        0,\r\n        startLily\r\n    ];\r\n\r\n    //sLily = lilies.startLily + 2;\r\n    //[sLilyX, sLilyY] = lilies.getLilyPos(sLily);\r\n    //frog2 = new Frog(lilies, gfx['bby'], 2, sLily, sLilyX, sLilyY, lilies.trueLilySpacingX);\r\n\r\n    frog = player.instantiateCharacter();\r\n    //frogs.push(frog2);\r\n\r\n    cam.toggleLock(frog);\r\n\r\n    background_x_0 = cam.x - cam.w / 2;\r\n    background_x_1 = cam.x - cam.w / 2 - bgWidth;\r\n\r\n    // scene bounds\r\n    boundLeft = lilies.getLilyPos(lilies.leftLily) + frog.offX;\r\n    boundRight = lilies.getLilyPos(lilies.rightLily) + frog.offX;\r\n\r\n    visibleFrogs = [0];\r\n}"],"names":[],"version":3,"file":"index.022a19a6.js.map","sourceRoot":"/__parcel_source_root/"}