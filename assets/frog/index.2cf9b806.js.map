{"mappings":"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","sources":["public/src/scene/menu.js"],"sourcesContent":["function Menu() {\r\n  /* setup (っ◔◡◔)っ ❤ */\r\n  this.setup = function() {\r\n    // canvas\r\n    calcWindowBounds();\r\n\r\n    // scene manager\r\n    mgr = this.sceneManager;\r\n\r\n    // get injected properties\r\n    gfx = mgr.gfx;\r\n    pixelFont = mgr.pixelFont;\r\n\r\n    // temp player\r\n    controlsEnabled = false;\r\n    puzzleMode = false;\r\n    snailPuzzle = false;\r\n    muted = false;\r\n    levelFailed = false;\r\n    levelWon = false;\r\n    buttonPressed = false;\r\n    tempPlayer = new Player();\r\n\r\n    // background size\r\n    bgRatio = screenSizeX / gfx['bgMenu'].width;\r\n    bgScale = 2;\r\n\r\n    // background pan\r\n    trajX = 0.1;\r\n    trajY = 0.05;\r\n\r\n    locX = -500;\r\n    locY = -500;\r\n\r\n    // global fade\r\n    globalOpacity = 0;\r\n    nothingDt = 4;\r\n    countTime = 0;\r\n    exiting = false;\r\n    displayFrogress = false;\r\n    startTime = millis();\r\n\r\n    // bugs\r\n    bugsN = 5;\r\n    bugsX = Array(bugsN).fill(0);\r\n    bugsY = Array(bugsN).fill(0);\r\n    bugsTX = Array(bugsN).fill(1);\r\n    bugsTY = Array(bugsN).fill(-1);\r\n    beeSprite = Array(bugsN);\r\n\r\n    for (let i = 0; i < bugsN; i++) {\r\n      bugsX[i] = Math.floor(Math.random() * screenSizeX);\r\n      bugsY[i] = Math.floor(Math.random() * screenSizeY);\r\n      bugsTX[i] = (Math.random() > .5) ? 1 : -1;\r\n      bugsTY[i] = (Math.random() > .5) ? 1 : -1;\r\n    }\r\n\r\n    // create game!\r\n    let canvas = createCanvas(screenSizeX, screenSizeY);\r\n    canvas.parent('game-container');\r\n\r\n    imX = screenSizeX;\r\n    imY = bgRatio * gfx.bgMenu.height;\r\n\r\n    // music\r\n    mgr.prop.song.setVolume(mgr.prop.musicVol);\r\n    mgr.prop.song.loop();\r\n  }\r\n\r\n  /* events (/◕ヮ◕)/ */\r\n\r\n  this.windowResized = function() {\r\n    calcWindowBounds();\r\n    imX = screenSizeX;\r\n    imY = bgRatio * gfx.bgMenu.height;\r\n\r\n    resizeCanvas(screenSizeX, screenSizeY);\r\n  }\r\n\r\n  this.goToFade = function() { \r\n    if (typeof startTime !== 'undefined') {\r\n      if (millis() - startTime > 1000 && (!cl_lastClicked)) { \r\n        exiting = true; \r\n      }\r\n    }\r\n  }\r\n  this.goToGame = function() { this.sceneManager.showScene(OpenLinear, {step: 0}); }\r\n  this.mouseClicked = this.goToFade;\r\n  this.keyPressed = this.goToFade;\r\n\r\n  /* main loop ✨(っ◔︣◡◔᷅)っc(◕︣◡◕᷅c)✨ */\r\n\r\n  this.frame = function() {\r\n    // update background pan\r\n    [velX, velY] = [trajX, trajY];\r\n    [destX, destY] = [locX + velX, locY + velY];\r\n    if ((destX >= 0) || (destX <= -gfx.bgMenu.width / 4)) trajX = -5 * Math.sign(destX);\r\n    else locX = destX;\r\n    if ((destY >= 0) || (destY <= -gfx.bgMenu.height / 4)) trajY = -5 * Math.sign(destY);\r\n    else locY = destY;\r\n\r\n    // update bugs\r\n    for (let i = 0; i < bugsN; i++) {\r\n      bugsX[i] += bugsTX[i];\r\n      bugsY[i] += bugsTY[i];\r\n\r\n      if (bugsX[i] > screenSizeX) bugsTX[i] = -1;\r\n      else if (bugsX[i] < 0) bugsTX[i] = 1;\r\n\r\n      if (bugsY[i] > screenSizeY) bugsTY[i] = -1;\r\n      else if (bugsY[i] < 0) bugsTY[i] = 1;\r\n\r\n      beeSprite[i] = (bugsTX[i] == 1) ? 'beeRight' : 'beeLeft';\r\n    }\r\n\r\n    if (exiting) {\r\n      globalOpacity += deltaTime / 10;\r\n\r\n      if (globalOpacity >= 255) {\r\n        countTime += deltaTime / 1000;\r\n\r\n        displayFrogress = true;\r\n\r\n        if (countTime >= nothingDt) {\r\n            this.goToGame();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.draw = function() {\r\n    this.frame();\r\n\r\n    // background\r\n    background(0);\r\n    if(isMobile) {\r\n      bg = gfx.bgMenu.get(0, 0, gfx.bgMenu.width, gfx.bgMenu.height);\r\n      image(bg, 0, 0, imX, imY);\r\n    } else {\r\n      // bg = gfx.bgMenu.get(locX, locY, bgScale * imX, bgScale * imY);\r\n      image(gfx.bgMenu, locX, locY, 0.5 * gfx.bgMenu.width, 0.5 * gfx.bgMenu.height);\r\n    }\r\n\r\n    // bugs >-<\r\n    for (let i = 0; i < bugsN; i++) {\r\n        push();\r\n\r\n        scale(.1);\r\n        translate(bugsX[i] / .1, bugsY[i] / .1);\r\n        image(gfx[beeSprite[i]], 0, 0);\r\n\r\n        pop();\r\n    }\r\n    tempPlayer.gui.draw();\r\n\r\n    // text\r\n    stroke(255);\r\n    fill(255);\r\n    textFont(pixelFont);\r\n\r\n    push();\r\n    textSize(128);\r\n    text('Frog World', 1.8 * screenSizeX / 7, screenSizeY / 6);\r\n    pop();\r\n\r\n    push();\r\n    textSize(64);\r\n    strokeWeight(1);\r\n    c = color(255, 127 + Math.sin((frameCount / 50)) * 127);\r\n    fill(c);\r\n    stroke(c);\r\n    text('begin?', 4 * screenSizeX / 5, 3 * screenSizeY / 4);\r\n    pop();\r\n\r\n    textSize(32);\r\n    text('lead artist: kyle lynn', 5, screenSizeY - 48);\r\n    text('developer/frog artist: laura ann', 5, screenSizeY - 16);\r\n    \r\n    background(0, globalOpacity);\r\n\r\n    if (displayFrogress) {\r\n        image(gfx['snail'], screenSizeX * (-.1 + 2 * countTime / nothingDt) - gfx['snail'].width / 2,\r\n                            screenSizeY / 2 - gfx['snail'].height / 2);\r\n        text('Loading in frogress...', screenSizeX / 2 - gfx['snail'].width / 2 - 20,\r\n                                       screenSizeY / 2 + gfx['snail'].height / 2 + 20);\r\n    }\r\n  }\r\n}"],"names":["Menu","this","setup","calcWindowBounds","mgr","sceneManager","gfx","pixelFont","controlsEnabled","puzzleMode","snailPuzzle","muted","levelFailed","levelWon","buttonPressed","tempPlayer","Player","bgRatio","screenSizeX","width","bgScale","trajX","trajY","locX","locY","globalOpacity","nothingDt","countTime","exiting","displayFrogress","startTime","millis","bugsN","bugsX","Array","fill","bugsY","bugsTX","bugsTY","beeSprite","i","Math","floor","random","screenSizeY","createCanvas","parent","imX","imY","bgMenu","height","prop","song","setVolume","musicVol","loop","windowResized","resizeCanvas","goToFade","cl_lastClicked","goToGame","showScene","OpenLinear","step","mouseClicked","keyPressed","frame","velX","velY","destX","destY","sign","deltaTime","draw","background","isMobile","bg","get","image","push","scale","translate","pop","gui","stroke","textFont","textSize","text","strokeWeight","c","color","sin","frameCount"],"version":3,"file":"index.2cf9b806.js.map"}