{"mappings":"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","sources":["public/vendor/js/p5.scenemanager.js"],"sourcesContent":["//\n// p5 SceneManager helps you create p5.js sketches with multiple states / scenes\n// Each scene is a like a sketch within the main sketch. You focus on creating\n// the scene like a regular sketch and SceneManager ensure scene switching\n// routing the main setup(), draw(), mousePressed(), etc. events to the \n// appropriate current scene.\n//\n// Author: Marian Veteanu\n// http://github.com/mveteanu\n//\nfunction SceneManager(p)\n{\n    this.scenes = [];\n    this.scene = null;\n    \n    // Wire relevant p5.js events, except setup()\n    // If you don't call this method, you need to manually wire events\n    this.wire = function()\n    {\n        const P5Events = [ \"mouseClicked\", \n                \"mousePressed\", \n                \"mouseReleased\", \n                \"mouseMoved\", \n                \"mouseDragged\", \n                \"doubleClicked\", \n                \"mouseWheel\", \n                \"keyPressed\", \n                \"keyReleased\", \n                \"keyTyped\", \n                \"touchStarted\", \n                \"touchMoved\", \n                \"touchEnded\", \n                \"deviceMoved\", \n                \"deviceTurned\", \n                \"deviceShaken\" ];\n\n        var me = this;\n        var o = p != null ? p : window;\n\n        // Wire draw manually for speed reasons...\n        o.draw = function(){ me.draw(); };\n\n        // This loop will wire automatically all P5 events to each scene like this:\n        // o.mouseClicked = function() { me.handleEvent(\"mouseClicked\"); }\n        for(var i = 0; i < P5Events.length; i++)\n        {\n            let sEvent = P5Events[i]; // let is necesary to set the scope at the level of for\n            o[sEvent] = function(event) { me.handleEvent(sEvent, event) };\n        }\n        \n        return me;\n    }\n\n\n    // Add a scene to the collection\n    // You need to add all the scenes if intend to call .showNextScene()\n    this.addScene = function( fnScene )\n    {\n        var oScene = new fnScene(p);\n\n        // inject p as a property of the scene\n        this.p = p;\n        \n        // inject sceneManager as a property of the scene\n        oScene.sceneManager = this;\n\n        var o = {   fnScene: fnScene, \n                    oScene: oScene,\n                    hasSetup : \"setup\" in oScene,\n                    hasEnter : \"enter\" in oScene,\n                    hasDraw : \"draw\" in oScene,\n                    setupExecuted : false,\n                    enterExecuted : false };\n\n        this.scenes.push(o);\n        return o;\n    }\n\n    // Return the index of a scene in the internal collection\n    this.findSceneIndex = function( fnScene )\n    {\n        for(var i = 0; i < this.scenes.length; i++)\n        {\n            var o = this.scenes[i]; \n            if ( o.fnScene == fnScene )\n                return i;\n        }\n\n        return -1;\n    }\n\n    // Return a scene object wrapper\n    this.findScene = function( fnScene )\n    {\n        var i = this.findSceneIndex( fnScene );\n        return i >= 0 ? this.scenes[i] : null;\n    }\n\n    // Returns true if the current displayed scene is fnScene\n    this.isCurrent = function ( fnScene )\n    {\n        if ( this.scene == null )\n            return false;\n\n        return this.scene.fnScene == fnScene;\n    }\n\n    // Show a scene based on the function name\n    // Optionally you can send arguments to the scene\n    // Arguments will be retrieved in the scene via .sceneArgs property\n    this.showScene = function( fnScene, sceneArgs )\n    {\n        var o = this.findScene( fnScene );\n\n        if ( o == null )\n            o = this.addScene( fnScene );\n        \n        // Re-arm the enter function at each show of the scene\n        o.enterExecuted = false;\n\n        this.scene = o;\n\n        // inject sceneArgs as a property of the scene\n        o.oScene.sceneArgs = sceneArgs;\n    }\n\n    // Show the next scene in the collection\n    // Useful if implementing demo applications \n    // where you want to advance scenes automatically\n    this.showNextScene = function( sceneArgs )\n    {\n        if ( this.scenes.length == 0 )\n            return;\n\n        var nextSceneIndex = 0;\n\n        if ( this.scene != null )\n        {\n            // search current scene... \n            // can be optimized to avoid searching current scene...\n            var i = this.findSceneIndex( this.scene.fnScene );\n            nextSceneIndex = i < this.scenes.length - 1 ? i + 1 : 0;\n        }\n\n        var nextScene = this.scenes[nextSceneIndex];\n        this.showScene( nextScene.fnScene, sceneArgs );\n    }\n    \n    // This is the SceneManager .draw() method\n    // This will dispatch the main draw() to the \n    // current scene draw() method\n    this.draw = function()\n    {\n        // take the current scene in a variable to protect it in case\n        // it gets changed by the user code in the events such as setup()...\n        var currScene = this.scene;\n        \n        if ( currScene == null )\n            return;\n\n        if ( currScene.hasSetup && !currScene.setupExecuted  )\n        {\n            currScene.oScene.setup();\n            currScene.setupExecuted = true;\n        }\n\n        if ( currScene.hasEnter && !currScene.enterExecuted  )\n        {\n            currScene.oScene.enter();\n            currScene.enterExecuted = true;\n        }\n\n        if ( currScene.hasDraw )\n        {\n            currScene.oScene.draw();\n        }\n    }\n\n\n    // Handle a certain event for a scene... \n    // It is used by the anonymous functions from the wire() function\n    this.handleEvent = function(sEvent, event)\n    {\n        if ( this.scene == null || this.scene.oScene == null )\n            return;\n\n        var fnSceneEvent = this.scene.oScene[sEvent];\n        if (fnSceneEvent)\n            fnSceneEvent.call(this.scene.oScene, event);\n    }\n\n    // Legacy method... preserved for maintaining compatibility\n    this.mousePressed = function()\n    {\n        this.handleEvent(\"mousePressed\");\n    }\n\n    // Legacy method... preserved for maintaining compatibility\n    this.keyPressed = function()\n    {\n        this.handleEvent(\"keyPressed\");\n    }\n\n}\n"],"names":[],"version":3,"file":"index.259fa7e2.js.map","sourceRoot":"/__parcel_source_root/"}