{"mappings":"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","sources":["public/src/client/gui.js"],"sourcesContent":["class GUI {\r\n\tconstructor() {\r\n\t\tthis.initialize();\r\n\t\tthis.calculate();\r\n\r\n\t\tthis.cyclicMode = false;\r\n\t}\r\n\r\n\tinitialize(vals = [1, 2, 3, 4]) {\r\n\t\tthis.init = {};\r\n\t\tthis.init['quickFrog'] = {'draw': false, 'obj': {}};\r\n\r\n\t\tconst guiRef = this;\r\n\r\n\t\tfor (const [j, letter] of Object.entries(['Q', 'W', 'E', 'R'])) {\r\n\t\t\tconst i = vals[Number(j)];\r\n\t\t\tconst name = letter + 'Button';\r\n\r\n\t\t\tthis.init['quickFrog']['obj'][name] = {\r\n\t\t\t\tname: name,\r\n\t\t\t\tfrogBound: i,\r\n\t\t\t\tisPressed: false,\r\n\t\t\t\tdoNotDraw: false,\r\n\r\n\t\t\t\tx: (Number(j)) / 8 + Number(j) / 128,\r\n\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\twidth: 1 / 8,\r\n\t\t\t\taspect: 'square',\r\n\t\t\t\tcornerRadius: 25,\r\n\r\n\t\t\t\timage: gfx['button'],\r\n\t\t\t\tfitImage: true,\r\n\t\t\t\timageScale: .95,\r\n\t\t\t\tstroke: color(0, 0),\r\n\t\t\t\tcolor: color(0, 0),\r\n\r\n\t\t\t\ttextColor: '#000',\r\n\t\t\t\ttextFont: pixelFont,\r\n\t\t\t\ttextSize: 32,\r\n\t\t\t\ttextScaled: true,\r\n\t\t\t\ttext: '\\n\\n' + i.toString(),\r\n\r\n\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t// (TEMP?) BUG FIX\r\n\t\t\t\t\t// verify mouse button isn't in invalid range\r\n\t\t\t\t\t// this prevents shaking\r\n\t\t\t\t\tlet mouseValidY = (mouseY < this.y) /* top bound */ || (mouseY > 2 * this.y + this.height) /* lower bound */;\r\n\t\t\t\t\tlet mouseValidX = (mouseX < this.x) /* left bound*/ || (mouseX > this.x + this.width)      /* right bound */; // standard stuff\r\n\t\t\t\t\tlet mouseValid = mouseValidX || mouseValidY;\r\n\r\n\t\t\t\t\tif ((!levelFailed && buttonPressed) || (snailPuzzle && !placingSnail)) controlsEnabled = true;\r\n\r\n\t\t\t\t\tif (mouseValid && (puzzleMode || (snailPuzzle && !placingSnail)) && (!buttonPressed || (this.name != buttonPressed)) && !this.doNotDraw) {\r\n\t\t\t\t\t\tif (!levelWon && !buttonPressed && frog.lily == 0) {\r\n\t\t\t\t\t\t\tif (snailPuzzle) frog.type = frogTypes[currentFrogType]; \r\n\t\t\t\t\t\t\telse frog.type = 0;\r\n\t\t\t\t\t\t} else if (!levelWon && buttonPressed) frog.type = player.gui.obj.quickFrog.obj[buttonPressed].frogBound;\r\n\r\n\t\t\t\t\t\tcursor('default');\r\n\t\t\t\t\t\tthis.playedSound = false;\r\n\t\t\t\t\t\tthis.image = gfx.button;\r\n\t\t\t\t\t\tthis.stroke = color(0, 0);\r\n\t\t\t\t\t\tthis.color = color(0, 0);\r\n\t\t\t\t\t\tthis.imageScale = .95;\r\n\t\t\t\t\t\tthis.y =  screenSizeY / 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonHover: function() {\r\n\t\t\t\t\tif ((puzzleMode || (snailPuzzle && !placingSnail))) {\r\n\t\t\t\t\t\tcontrolsEnabled = false;\r\n\t\t\t\t\t\tcursor('grab');\r\n\t\t\t\t\t\tif (!this.playedSound) sfx.tick.play();\r\n\t\t\t\t\t\tthis.playedSound = true;\r\n\t\t\t\t\t\tthis.image = gfx.buttonToggled;\r\n\t\t\t\t\t\tthis.imageScale = .97;\r\n\t\t\t\t\t\tthis.y = screenSizeY / 28;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (frog.lily == 0 && !buttonPressed) frog.type = this.frogBound;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonPress: function() {\r\n\t\t\t\t\tif ((puzzleMode || (snailPuzzle && !placingSnail)) && !levelWon && !levelFailed) {\r\n\t\t\t\t\t\tif (buttonPressed || (snailPuzzle && frog.lily > 0)) mgr.scene.oScene.resetLevel();\r\n\t\t\t\t\t\tbuttonPressed = this.name;\r\n\r\n\t\t\t\t\t\tsfx.tick.play();\r\n\t\t\t\t\t\tfrog.type = this.frogBound;\r\n\t\t\t\t\t\tif (snailPuzzle) {\r\n\t\t\t\t\t\t\tcurrentFrogType = frogTypes.indexOf(this.frogBound);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.stroke = 'rgba(100, 255, 100, 1)';\r\n\t\t\t\t\t\tthis.color = 'rgba(100, 255, 100, 1)';\r\n\t\t\t\t\t\tthis.imageScale = .98;\r\n\r\n\t\t\t\t\t\t//if (!guiRef.cyclicMode)\r\n\t\t\t\t\t\tcontrolsEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\textraDraw: function() {\r\n\t\t\t\t\t// draw froggy grid\r\n\t\t\t\t\tconst angle = 2 * PI / this.frogBound;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.frogBound; i++) {\r\n\t\t\t\t\t\tlet x = this.x + this.width / 5 * (2.1 + Math.cos(angle * i));\r\n\t\t\t\t\t\tlet y = this.y + this.width / 5 * (1.5 + Math.sin(angle * i));\r\n\r\n\t\t\t\t\t\timage(gfx['bby'], x, y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.init['buttons'] = {\r\n\t\t\tdraw: false,\r\n\r\n\t\t\tobj: {\r\n\t\t\t\t'inventoryButton': {\r\n\t\t\t\t\tx: 1 / 64,\r\n\t\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\t\twidth: 1 / 24,\r\n\t\t\t\t\taspect: 'square',\r\n\r\n\t\t\t\t\timage: gfx['inventoryButton'],\r\n\t\t\t\t\tfitImage: true,\r\n\t\t\t\t\ttext: '',\r\n\r\n\t\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t\tthis.color = '#000';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonHover: function() {\r\n\t\t\t\t\t\tthis.color = '#222';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonRelease: function() {\r\n\t\t\t\t\t\tplayer.gui.obj.quickFrog.draw = !player.gui.obj.quickFrog.draw;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\textraDraw: () => {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.init.sound = {\r\n\t\t\tdraw: true,\r\n\r\n\t\t\tobj: {\r\n\t\t\t\t'soundButton': {\r\n\t\t\t\t\tx: .96,\r\n\t\t\t\t\ty: .935,\r\n\r\n\t\t\t\t\twidth: 1 / 25,\r\n\t\t\t\t\taspect: 'square',\r\n\r\n\t\t\t\t\tcolor: color(0, 0),\r\n\t\t\t\t\tstroke: color(0, 0),\r\n\t\t\t\t\timage: getOutputVolume() && gfx.soundOn || gfx.soundOff,\r\n\t\t\t\t\tfitImage: false,\r\n\t\t\t\t\ttext: '',\r\n\r\n\t\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t\tthis.width = screenSizeX / 28;\r\n\t\t\t\t\t\tthis.height = this.width;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonHover: function() {\r\n\t\t\t\t\t\tthis.width = screenSizeX / 25;\r\n\t\t\t\t\t\tthis.height = this.width;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonRelease: function() {\r\n\t\t\t\t\t\tlet newVol = Math.abs(getOutputVolume() - 1.); // 0 -> 1; 1 -> 0\r\n\t\t\t\t\t\tthis.image = newVol && gfx.soundOn || gfx.soundOff; // 1 -> on; 0 -> off\r\n\r\n\t\t\t\t\t\toutputVolume(newVol); // set global volume\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\textraDraw: () => {}\r\n\t\t\t\t}\r\n\r\n\t\t\t// \t'fxButton': {\r\n\t\t\t// \t\tx: 7 / 128,\r\n\t\t\t// \t\ty: 0,\r\n\r\n\t\t\t// \t\twidth: 1 / 16,\r\n\t\t\t// \t\taspect: 'square',\r\n\r\n\t\t\t// \t\tcolor: color(0, 0),\r\n\t\t\t// \t\tstroke: color(0, 0),\r\n\t\t\t// \t\timage: muted && gfx.speakerOff || gfx.speaker,\r\n\t\t\t// \t\tfitImage: true,\r\n\t\t\t// \t\ttext: '',\r\n\r\n\t\t\t// \t\tonOutside: function() {\r\n\t\t\t// \t\t\tthis.width = screenSizeX / 32;\r\n\t\t\t// \t\t},\r\n\r\n\t\t\t// \t\tonHover: function() {\r\n\t\t\t// \t\t\tthis.width = screenSizeX / 28;\r\n\t\t\t// \t\t},\r\n\r\n\t\t\t// \t\tonRelease: function() {\r\n\t\t\t// \t\t\tmuted = !muted;\r\n\t\t\t// \t\t\tthis.image = muted && gfx.speakerOff || gfx.speaker;\r\n\t\t\t// \t\t},\r\n\r\n\t\t\t// \t\textraDraw: function() {}\r\n\t\t\t// \t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcalculate() {\r\n\t\tthis.obj = {};\r\n\r\n\t\tfor (const [typeName, objType] of Object.entries(this.init)) {\r\n\t\t\tthis.obj[typeName] = {draw: objType.draw, obj: {}};\r\n\r\n\t\t\tfor (const [objName, obj] of Object.entries(objType.obj)) {\r\n\t\t\t\t// scale to canvas size\r\n\t\t\t\tobj.x *= screenSizeX;\r\n\t\t\t\tobj.y *= screenSizeY;\r\n\r\n\t\t\t\tobj.width *= screenSizeX;\r\n\r\n\t\t\t\tif (obj.aspect == 'square') obj.height = obj.width;\r\n\t\t\t\telse obj.height *= screenSizeY;\r\n\r\n\t\t\t\t// copy properties to Clickable object\r\n\t\t\t\tthis.obj[typeName]['obj'][objName] = new Clickable();\r\n\t\t\t\tObject.assign(this.obj[typeName]['obj'][objName], obj);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// frame() \r\n\r\n\tdraw() {\r\n\t\tfor (const [typeName, objType] of Object.entries(this.obj)) {\r\n\t\t\tif (objType.draw) {\r\n\t\t\t\tfor (const [objName, obj] of Object.entries(objType['obj'])) {\r\n\t\t\t\t\tif (obj.doNotDraw) continue;\r\n\t\t\t\t\tobj.draw();\r\n\t\t\t\t\tobj.extraDraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"names":["GUI","constructor","this","initialize","calculate","cyclicMode","vals","init","draw","obj","j","letter","Object","entries","i1","Number","name","frogBound","isPressed","doNotDraw","x","y","width","aspect","cornerRadius","image","gfx","fitImage","imageScale","stroke","color","textColor","textFont","pixelFont","textSize","textScaled","text","toString","onOutside","mouseValidY","mouseY","height","mouseValidX","mouseX","levelFailed","buttonPressed","snailPuzzle","placingSnail","controlsEnabled","puzzleMode","levelWon","frog","lily","type","player","gui","quickFrog","frogTypes","currentFrogType","cursor","playedSound","button","screenSizeY","onHover","sfx","tick","play","buttonToggled","onPress","mgr","scene","oScene","resetLevel","indexOf","extraDraw","angle","PI","i","Math","cos","sin","inventoryButton","onRelease","sound","soundButton","getOutputVolume","soundOn","soundOff","screenSizeX","newVol","abs","outputVolume","typeName","objType","objName","Clickable","assign"],"version":3,"file":"index.35c04aec.js.map"}