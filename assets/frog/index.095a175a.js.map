{"mappings":"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","sources":["public/src/client/gui.js"],"sourcesContent":["class GUI {\r\n\tconstructor() {\r\n\t\tthis.initialize();\r\n\t\tthis.calculate();\r\n\r\n\t\tthis.cyclicMode = false;\r\n\t}\r\n\r\n\tinitialize(vals = [1, 2, 3, 4]) {\r\n\t\tthis.init = {};\r\n\t\tthis.init['quickFrog'] = {'draw': false, 'obj': {}};\r\n\r\n\t\tconst guiRef = this;\r\n\r\n\t\tfor (const [j, letter] of Object.entries(['Q', 'W', 'E', 'R'])) {\r\n\t\t\tconst i = vals[Number(j)];\r\n\r\n\t\t\tthis.init['quickFrog']['obj'][letter + 'Button'] = {\r\n\t\t\t\tfrogBound: i,\r\n\r\n\t\t\t\tx: (Number(j)) / 8 + Number(j) / 128,\r\n\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\twidth: 1 / 8,\r\n\t\t\t\taspect: 'square',\r\n\t\t\t\tcornerRadius: 25,\r\n\r\n\t\t\t\timage: gfx['button'],\r\n\t\t\t\tfitImage: true,\r\n\t\t\t\timageScale: .95,\r\n\t\t\t\tstroke: color(0, 0),\r\n\t\t\t\tcolor: color(0, 0),\r\n\r\n\t\t\t\ttextColor: '#000',\r\n\t\t\t\ttextFont: pixelFont,\r\n\t\t\t\ttextSize: 32,\r\n\t\t\t\ttextScaled: true,\r\n\t\t\t\ttext: '\\n\\n' + i.toString(),\r\n\r\n\t\t\t\tonOutside: function() {\r\n\t\t\t\t\tif (!buttonPressed && puzzleMode) {\r\n\t\t\t\t\t\tcursor('default');\r\n\t\t\t\t\t\tthis.image = gfx.button;\r\n\t\t\t\t\t\tthis.stroke = color(0, 0);\r\n\t\t\t\t\t\tthis.color = color(0, 0);\r\n\t\t\t\t\t\tthis.imageScale = .95;\r\n\t\t\t\t\t\tthis.y = screenSizeY / 32;\r\n\t\t\t\t\t\tfrog.type = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonHover: function() {\r\n\t\t\t\t\tif (!buttonPressed && puzzleMode) {\r\n\t\t\t\t\t\tcursor('grab');\r\n\t\t\t\t\t\tthis.image = gfx.buttonToggled;\r\n\t\t\t\t\t\tthis.imageScale = .97;\r\n\t\t\t\t\t\tthis.y = screenSizeY / 64;\r\n\t\t\t\t\t\tfrog.type = this.frogBound;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonPress: function() {\r\n\t\t\t\t\tif (!buttonPressed && puzzleMode) {\r\n\t\t\t\t\t\tbuttonPressed = true;\r\n\t\t\t\t\t\tfrog.type = this.frogBound;\r\n\t\t\t\t\t\tthis.stroke = 'rgba(100, 255, 100, 1)';\r\n\t\t\t\t\t\tthis.color = 'rgba(100, 255, 100, 1)';\r\n\t\t\t\t\t\tthis.imageScale = .98;\r\n\r\n\t\t\t\t\t\t//if (!guiRef.cyclicMode)\r\n\t\t\t\t\t\tcontrolsEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\textraDraw: function() {\r\n\t\t\t\t\t// draw froggy grid\r\n\t\t\t\t\tconst angle = 2 * PI / this.frogBound;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.frogBound; i++) {\r\n\t\t\t\t\t\tlet x = this.x + this.width / 5 * (2.1 + Math.cos(angle * i));\r\n\t\t\t\t\t\tlet y = this.y + this.width / 5 * (1.5 + Math.sin(angle * i));\r\n\r\n\t\t\t\t\t\timage(gfx['bby'], x, y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.init['buttons'] = {\r\n\t\t\tdraw: false,\r\n\r\n\t\t\tobj: {\r\n\t\t\t\t'inventoryButton': {\r\n\t\t\t\t\tx: 1 / 64,\r\n\t\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\t\twidth: 1 / 24,\r\n\t\t\t\t\taspect: 'square',\r\n\r\n\t\t\t\t\timage: gfx['inventoryButton'],\r\n\t\t\t\t\tfitImage: true,\r\n\t\t\t\t\ttext: '',\r\n\r\n\t\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t\tthis.color = '#000';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonHover: function() {\r\n\t\t\t\t\t\tthis.color = '#222';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonRelease: function() {\r\n\t\t\t\t\t\tplayer.gui.obj.quickFrog.draw = !player.gui.obj.quickFrog.draw;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\textraDraw: function() {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tcalculate() {\r\n\t\tthis.obj = {};\r\n\r\n\t\tfor (const [typeName, objType] of Object.entries(this.init)) {\r\n\t\t\tthis.obj[typeName] = {draw: objType.draw, obj: {}};\r\n\r\n\t\t\tfor (const [objName, obj] of Object.entries(objType.obj)) {\r\n\t\t\t\t// scale to canvas size\r\n\t\t\t\tobj.x *= screenSizeX;\r\n\t\t\t\tobj.y *= screenSizeY;\r\n\r\n\t\t\t\tobj.width *= screenSizeX;\r\n\r\n\t\t\t\tif (obj.aspect == 'square') obj.height = obj.width;\r\n\t\t\t\telse obj.height *= screenSizeY;\r\n\r\n\t\t\t\t// copy properties to Clickable object\r\n\t\t\t\tthis.obj[typeName]['obj'][objName] = new Clickable();\r\n\t\t\t\tObject.assign(this.obj[typeName]['obj'][objName], obj);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// frame() \r\n\r\n\tdraw() {\r\n\t\tfor (const [typeName, objType] of Object.entries(this.obj)) {\r\n\t\t\tif (objType.draw) {\r\n\t\t\t\tfor (const [objName, obj] of Object.entries(objType['obj'])) {\r\n\t\t\t\t\tobj.draw();\r\n\t\t\t\t\tobj.extraDraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"names":["GUI","constructor","this","initialize","calculate","cyclicMode","vals","init","draw","obj","j","letter","Object","entries","i1","Number","frogBound","x","y","width","aspect","cornerRadius","image","gfx","fitImage","imageScale","stroke","color","textColor","textFont","pixelFont","textSize","textScaled","text","toString","onOutside","buttonPressed","puzzleMode","cursor","button","screenSizeY","frog","type","onHover","buttonToggled","onPress","controlsEnabled","extraDraw","angle","PI","i","Math","cos","sin","inventoryButton","onRelease","player","gui","quickFrog","typeName","objType","objName","screenSizeX","height","Clickable","assign"],"version":3,"file":"index.095a175a.js.map"}