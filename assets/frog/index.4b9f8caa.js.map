{"mappings":"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","sources":["public/src/scene/menu.js"],"sourcesContent":["function Menu() {\r\n  /* setup (っ◔◡◔)っ ❤ */\r\n  this.setup = function() {\r\n    // get injected properties\r\n    gfx = this.sceneManager.gfx;\r\n    pixelFont = this.sceneManager.pixelFont;\r\n\r\n    // canvas\r\n    calcWindowBounds();\r\n\r\n    // background size\r\n    bgRatio = screenSizeX / gfx['menuBg'].width;\r\n    bgScale = 2;\r\n\r\n    // background pan\r\n    trajX = 1;\r\n    trajY = 1;\r\n\r\n    locX = gfx['menuBg'].width / 3;\r\n    locY = gfx['menuBg'].height / 3;\r\n\r\n    // global fade\r\n    globalOpacity = 0;\r\n    nothingDt = 4;\r\n    countTime = 0;\r\n    exiting = false;\r\n    displayFrogress = false;\r\n\r\n    // bugs\r\n    bugsN = 5;\r\n    bugsX = Array(bugsN).fill(0);\r\n    bugsY = Array(bugsN).fill(0);\r\n    bugsTX = Array(bugsN).fill(1);\r\n    bugsTY = Array(bugsN).fill(-1);\r\n    beeSprite = Array(bugsN);\r\n\r\n    for (let i = 0; i < bugsN; i++) {\r\n      bugsX[i] = Math.floor(Math.random() * screenSizeX);\r\n      bugsY[i] = Math.floor(Math.random() * screenSizeY);\r\n      bugsTX[i] = (Math.random() > .5) ? 1 : -1;\r\n      bugsTY[i] = (Math.random() > .5) ? 1 : -1;\r\n    }\r\n\r\n    // create game!\r\n    let canvas = createCanvas(screenSizeX, screenSizeY);\r\n    canvas.parent('game-container');\r\n  }\r\n\r\n  /* events (/◕ヮ◕)/ */\r\n\r\n  this.windowResized = function() {\r\n    calcWindowBounds();\r\n    imX = screenSizeX;\r\n    imY = bgRatio * gfx['menuBg'].height;\r\n    resizeCanvas(screenSizeX, screenSizeY);\r\n  }\r\n\r\n  this.goToFade = function() { exiting = true; }\r\n  this.goToGame = function() { this.sceneManager.showScene(OpenLinear, {step: 0}); }\r\n  this.mouseClicked = this.goToFade;\r\n  this.keyPressed = this.goToFade;\r\n\r\n  /* main loop ✨(っ◔︣◡◔᷅)っc(◕︣◡◕᷅c)✨ */\r\n\r\n  this.frame = function() {\r\n    // update background pan\r\n    locX += trajX * Math.ceil(deltaTime / 1000);\r\n    locY += trajY * Math.ceil(deltaTime / 2000);\r\n\r\n    imX = screenSizeX;\r\n    imY = bgRatio * gfx['menuBg'].height;\r\n\r\n    if (locX + bgScale * imX > gfx['menuBg'].width) trajX = -1;\r\n    else if (locX <= 0) trajX = 1;\r\n\r\n    if (locY + bgScale * imY > gfx['menuBg'].height) trajY = -1;\r\n    else if (locY <= 0) trajY = 1;\r\n\r\n    // update bugs\r\n    for (let i = 0; i < bugsN; i++) {\r\n      bugsX[i] += bugsTX[i];\r\n      bugsY[i] += bugsTY[i];\r\n\r\n      if (bugsX[i] > screenSizeX) bugsTX[i] = -1;\r\n      else if (bugsX[i] < 0) bugsTX[i] = 1;\r\n\r\n      if (bugsY[i] > screenSizeY) bugsTY[i] = -1;\r\n      else if (bugsY[i] < 0) bugsTY[i] = 1;\r\n\r\n      beeSprite[i] = (bugsTX[i] == 1) ? 'beeRight' : 'beeLeft';\r\n    }\r\n\r\n    if (exiting) {\r\n      globalOpacity += deltaTime / 10;\r\n\r\n      if (globalOpacity >= 255) {\r\n        countTime += deltaTime / 1000;\r\n\r\n        displayFrogress = true;\r\n\r\n        if (countTime >= nothingDt) {\r\n            this.goToGame();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.draw = function() {\r\n    this.frame();\r\n\r\n    // background\r\n    bg = gfx['menuBg'].get(locX, locY, bgScale * imX, bgScale * imY);\r\n    image(bg, 0, 0, imX, imY);\r\n\r\n    // bugs >-<\r\n    for (let i = 0; i < bugsN; i++) {\r\n        push();\r\n\r\n        scale(.1);\r\n        translate(bugsX[i] / .1, bugsY[i] / .1);\r\n        image(gfx[beeSprite[i]], 0, 0);\r\n\r\n        pop();\r\n    }\r\n\r\n    // text\r\n    stroke(255);\r\n    fill(255);\r\n    textFont(pixelFont);\r\n\r\n    push();\r\n    textSize(128);\r\n    text('Frog World', 1.8 * screenSizeX / 7, screenSizeY / 6);\r\n    pop();\r\n\r\n    push();\r\n    textSize(64);\r\n    strokeWeight(1);\r\n    c = color(255, 127 + Math.sin((frameCount / 50)) * 127);\r\n    fill(c);\r\n    stroke(c);\r\n    text('begin?', 4 * screenSizeX / 5, 3 * screenSizeY / 4);\r\n    pop();\r\n\r\n    textSize(32);\r\n    text('lead artist: kyle lynn', 5, screenSizeY - 48);\r\n    text('developer/frog artist: laura ann', 5, screenSizeY - 16);\r\n    \r\n    background(0, globalOpacity);\r\n\r\n    if (displayFrogress) {\r\n        image(gfx['snail'], screenSizeX * (-.1 + 2 * countTime / nothingDt) - gfx['snail'].width / 2,\r\n                            screenSizeY / 2 - gfx['snail'].height / 2);\r\n        text('Loading in frogress...', screenSizeX / 2 - gfx['snail'].width / 2 - 20,\r\n                                       screenSizeY / 2 + gfx['snail'].height / 2 + 20);\r\n    }\r\n  }\r\n}"],"names":["Menu","this","setup","gfx","sceneManager","pixelFont","calcWindowBounds","bgRatio","screenSizeX","width","bgScale","trajX","trajY","locX","locY","height","globalOpacity","nothingDt","countTime","exiting","displayFrogress","bugsN","bugsX","Array","fill","bugsY","bugsTX","bugsTY","beeSprite","i","Math","floor","random","screenSizeY","createCanvas","parent","windowResized","imX","imY","resizeCanvas","goToFade","goToGame","showScene","OpenLinear","step","mouseClicked","keyPressed","frame","ceil","deltaTime","draw","bg","get","image","push","scale","translate","pop","stroke","textFont","textSize","text","strokeWeight","c","color","sin","frameCount","background"],"version":3,"file":"index.4b9f8caa.js.map"}