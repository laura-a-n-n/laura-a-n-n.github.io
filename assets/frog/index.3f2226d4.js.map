{"mappings":"AAcyB,MAAAA,OAAU,sBAAEC,SAAW,CAC9B,aAAS,QAAQ,OAAkB,YACnC,UAAmB,MACnB,WACA,YACA,QAAc,OACd,iBACA,sBACA,kBAAO,uBAAY,UAAa,eAChC,aAAoB,eAAU,QAC9B,iBAAa,MAAY,WAAW,YACpC,YAAM,mBAAQ,SAAQ,iBAAW,YAAQ,WAC3D,UAAmB,cAAkB,KAErC,OAAkB,OAAkC,UAAc,SAA4BC,UAAc,CAC1F,mBAAwBC,SAAA,CAAgB,iCAAY,aAElE,WACA,eAEJ,eAGE,YACA,yCAMAC,IAAK,OACD,GACY,SAAWC,UAGvB,IAAA,MAAAC,KAAAL,SAAA,CAEI,MAAAM,EAAAC,eAAAF,GACPF,IAAAG,GAAAE,UAAA,GAAAT,cAAAM,SAGD,IAAA,MAASI,KAAGR,UAAY,CAEdM,eAAAE,GAAV,MACUC,EAAGF,UAAY,GAAET,cAAOU,SAGlCN,IAAQ,eAAAO,EAMRC,UAAQC,SAAa,GAACb,iCAGxBc,WAAAC,WAAA,GAAAf,0BAAA,GAAAA,2BAOI,IAAA,MAAMgB,KAASb,SAAQ,CAGvB,MAAOI,EAAAC,eAAAQ,EAAAC,MAAA,GAAA,IAACC,IAAAX,GAAKY,UAAA,GAAAnB,cAAAgB,SACRI,IAAIC,UAAQ,IAOnB,SAAAC,YAAcC,GACd,MAAMC,EAAOD,EAASE,aAAAC,EAAqBC,OAASC,iBAAIL,GACxD,MAAM,CACN,MAEA,UACAM,KAAMC,GAAMC,SAAGL,EAAY,UAAOI,QAClCE,QAAA,CAAAC,EAAcH,IAASG,EAAMH,GAC7BN,YAIKU,yBAGHC,EAAOC,SAAOC,qBAAkB,UAAA,GAGjCC,GADUF,SAAAG,eAAe,kBACzBH,SAAAG,eAAA,iBAEIC,EAAOb,OAAWc,aAAAnB,YAAAa,GAAA,IAAAb,YAAAgB,IACrBI,EAAOF,EAAA,gBACGG,KAAEC,IAAA,KAAA,KAAAF,eACFC,KAAAC,IAAAJ,EAAA,cAEVK,aACAC,MAAS,WACTZ,mBACaa,aAAAC,YAAAC,aACNC,OAAO,kBACdd,SAAKG,eAAA,gBAAAb,MAAwCyB,QAAE,cAEhDC,KAAA,WAEGC,OACFC,OAAK,KACNC,KAAA,KAEGC,SAAC,IACDC,UAACC,QACNC,SAAA/C,WAEDgD,KAAS,iCAAQZ,YAAA,EAAAC,YAAA,GACfO,SAAS,IAA8DF,OAAI,IAAM,GAAmFM,KAAA,yCAAAZ,YAAA,EAAA,EAAAC,YAAA,GAEpKY,OAIAC,KAAIC,SAAU,WACVD,KAAGE,aAAOC,UAAAC,OAEdJ,KAAIK,aAAaL,KAAAC,SAEjBD,KAAIM,WAAON,KAAAC,kBAAkCjB,iBAAmBP,eAAI,kBAAA8B,cAAA,WAAE,GAAAC,OAAA,GAAAA,OAAAtB,aAAAuB,OAAA,GAAAA,OAAAtB,YAAA,OAAA,GAG9C,IAAGuB,EAAA,IAAAC,aAG3BD,EAAIpE,IAAMA,IACVoE,EAAAtD,IAAAA,IACAsD,EAAA5D,UAAAA,UACA4D,EAAA1D,WAAAA,WACA0D,EAAIE,KAAA,CACJC,KAAAzD,IAAA0D,sBACAC,SAAA,EACDC,MAAA","sources":["public/src/main.js"],"sourcesContent":["  /*         _\r\n  __   ___.--'_`.     .'_`--.___   __\r\n ( _`.'. -   'o` )   ( 'o`   - .`.'_ )\r\n _\\.'_'      _.-'     `-._      `_`./_\r\n( \\`. )    //\\`         '/\\\\    ( .'/ )\r\n \\_`-'`---'\\\\__,       ,__//`---'`-'_/\r\n  \\`        `-\\         /-'        '/\r\n   `                               '  \r\n  */\r\n\r\nconst assets = '/assets/frog/assets'; // no trailing slash!\r\nconst gfxNames = ['frog-stand', \r\n                  'water', \r\n                  'lily', 'lily-down', 'lily-up',\r\n                  'fly', 'bee-left', 'bee-right',\r\n                  'snail', 'crab', 'small-bee-left', 'small-bee-wing-left',\r\n                  'small-bee-right', 'small-bee-wing-right',\r\n                  'fly-bar',\r\n                  'fly-bar-grey',\r\n                  'fly-bubble', 'alert-bubble',\r\n                  'heart',\r\n                  'alt-frog-stand',\r\n                  'bby', 'bby-body', 'bby-frame', 'quest-box',\r\n                  'inventory-button', 'button', 'button-toggled',\r\n                  'sound-off', 'sound-on', 'speaker', 'speaker-off',\r\n                  'bg', 'bg-2', 'bg-3', 'menu-bg', 'palms']\r\nconst gfxSheets = ['bby-spritesheet']\r\n\r\nconst sfxNames = ['may-your-night-be-at-peace.mp3', 'wizard.wav', 'soso.mp3', 'toy-town.mp3', 'the-moon.mp3',\r\n                  'heart.wav', 'hop.wav', 'hop-left.wav', 'tick.wav'];\r\n\r\nlet gfx = {};\r\nlet sfx = {};\r\n\r\n/* setup (っ◔◡◔)っ ❤ */\r\n\r\nfunction preload() {\r\n  // images\r\n  for (const obj of gfxNames) {\r\n    const key = camelizeDashes(obj);\r\n\r\n    gfx[key] = loadImage(`${assets}/img/${obj}.png`);\r\n  }\r\n\r\n  for (const obj of gfxSheets) {\r\n      const key = camelizeDashes(obj);\r\n      const img = loadImage(`${assets}/img/${obj}.png`);\r\n      gfx['bbySpritesheet'] = img;\r\n\r\n      // for (let i = 0; i < 10; i++) {\r\n        \r\n      // }\r\n  }\r\n\r\n  // font\r\n  pixelFont = loadFont(`${assets}/font/VT323-Regular.ttf`);\r\n\r\n  // shaders\r\n  frogShader = loadShader(`${assets}/shader/frog.vert`, \r\n                          `${assets}/shader/frog.frag`);\r\n\r\n  // sound\r\n  for (const obj of sfxNames) {\r\n    const key = camelizeDashes(obj.slice(0, -4));\r\n    sfx[key] = loadSound(`${assets}/sfx/${obj}`);\r\n  }\r\n\r\n  sfx.hop.setVolume(.7);\r\n}\r\n\r\n// from: https://stackoverflow.com/questions/10787782/full-height-of-a-html-element-div-including-border-padding-and-margin\r\n/** \r\n * Returns the element height including margins\r\n * @param element - element\r\n * @returns {number}\r\n */\r\nfunction outerHeight(element) {\r\n    const height = element.offsetHeight,\r\n        style = window.getComputedStyle(element)\r\n\r\n    return ['top', 'bottom']\r\n        .map(side => parseInt(style[`margin-${side}`]))\r\n        .reduce((total, side) => total + side, height)\r\n}\r\n// ...\r\n\r\nfunction calcWindowBounds() {\r\n  //marginX = 0;\r\n  //marginY = 0;\r\n  const head = document.getElementsByTagName('header')[0];\r\n  const cont = document.getElementById('game-container');\r\n  const foot = document.getElementById('game-details');\r\n\r\n  const viewportSize = window.innerHeight - (outerHeight(head) + 150 + outerHeight(foot));\r\n  const aspect = viewportSize / 700;\r\n  screenSizeX = Math.min(1024, 1024 * aspect);\r\n  screenSizeY = Math.min(viewportSize, 700);\r\n}\r\n\r\nfunction Begin() {\r\n  this.setup = function() {\r\n    calcWindowBounds();\r\n    let canvas = createCanvas(screenSizeX, screenSizeY);\r\n    canvas.parent('game-container');\r\n\r\n    document.getElementById('game-details').style.display = 'block';\r\n  }\r\n\r\n  this.draw = function() {\r\n    push();\r\n    stroke(255);\r\n    fill(255);\r\n    textSize(64);\r\n    textAlign(CENTER);\r\n    textFont(pixelFont)\r\n    text('Click or press a key to begin!', screenSizeX / 2, screenSizeY / 2);\r\n    textSize(32);\r\n    stroke(255, 0);\r\n    text('warning: not yet optimized for mobile!', screenSizeX / 2,  5 * screenSizeY / 7);\r\n    pop();\r\n  }\r\n\r\n  this.onAction = function() {\r\n    this.sceneManager.showScene(Menu);  \r\n  }\r\n\r\n  this.mousePressed = this.onAction;\r\n  this.keyPressed = this.onAction;\r\n}\r\n\r\nfunction setup() {\r\n  document.getElementById('game-container').oncontextmenu = function() { if (mouseX > 0 && mouseX < screenSizeX && mouseY > 0 && mouseY < screenSizeY) return false; }\r\n\r\n  /* ~ scene manager ~ */\r\n  let mgr = new SceneManager();\r\n\r\n  // inject properties\r\n  mgr.gfx = gfx;\r\n  mgr.sfx = sfx;\r\n  mgr.pixelFont = pixelFont;\r\n  mgr.frogShader = frogShader;\r\n\r\n  mgr.prop = {song: sfx.mayYourNightBeAtPeace, musicVol: 1., fxVol: 1.};\r\n\r\n  // environment\r\n  generalState.envFunction = linearEnvironment;\r\n\r\n  // setup\r\n  mgr.wire();\r\n  //mgr.showScene(FactorsPuzzle, {specialLily: 9, initVals: [2, 3, 4, 5]});\r\n  //mgr.showScene(CyclicFactorsPuzzle, {specialLily: 9, initVals: [2, 3, 4, 5]});\r\n  //mgr.showScene(FrogHeaven);\r\n  mgr.showScene(Begin);\r\n  //mgr.showScene(Menu);\r\n  //mgr.showScene(OpenLinear, {step: 1})\r\n}"],"names":["assets","gfxNames","gfxSheets","sfxNames","gfx","preload","obj","key","camelizeDashes","loadImage","obj1","img","pixelFont","loadFont","frogShader","loadShader","obj2","slice","sfx","loadSound","hop","setVolume","outerHeight","element","height","offsetHeight","style","window","getComputedStyle","map","side","parseInt","reduce","total","calcWindowBounds","head","document","getElementsByTagName","foot","getElementById","viewportSize","innerHeight","aspect","Math","min","Begin","setup","createCanvas","screenSizeX","screenSizeY","parent","display","draw","push","stroke","fill","textSize","textAlign","CENTER","textFont","text","pop","this","onAction","sceneManager","showScene","Menu","mousePressed","keyPressed","oncontextmenu","mouseX","mouseY","mgr","SceneManager","prop","song","mayYourNightBeAtPeace","musicVol","fxVol"],"version":3,"file":"index.3f2226d4.js.map"}