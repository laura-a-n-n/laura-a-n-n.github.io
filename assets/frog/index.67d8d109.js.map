{"mappings":"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","sources":["public/src/client/gui.js"],"sourcesContent":["class GUI {\r\n\tconstructor() {\r\n\t\tthis.initialize();\r\n\t\tthis.calculate();\r\n\r\n\t\tthis.cyclicMode = false;\r\n\t}\r\n\r\n\tinitialize(vals = [1, 2, 3, 4]) {\r\n\t\tthis.init = {};\r\n\t\tthis.init['quickFrog'] = {'draw': false, 'obj': {}};\r\n\r\n\t\tconst guiRef = this;\r\n\r\n\t\tfor (const [j, letter] of Object.entries(['Q', 'W', 'E', 'R'])) {\r\n\t\t\tconst i = vals[Number(j)];\r\n\r\n\t\t\tthis.init['quickFrog']['obj'][letter + 'Button'] = {\r\n\t\t\t\tfrogBound: i,\r\n\r\n\t\t\t\tx: (Number(j)) / 8 + Number(j) / 128,\r\n\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\twidth: 1 / 8,\r\n\t\t\t\taspect: 'square',\t\r\n\r\n\t\t\t\timage: gfx['bby'],\r\n\t\t\t\tfitImage: false,\r\n\t\t\t\timageScale: .25,\r\n\t\t\t\tstroke: color(0, 0),\r\n\r\n\t\t\t\ttextColor: '#000',\r\n\t\t\t\ttextFont: pixelFont,\r\n\t\t\t\ttextSize: 32,\r\n\t\t\t\ttextScaled: true,\r\n\t\t\t\ttext: '\\n\\n' + i.toString(),\r\n\r\n\t\t\t\tonOutside: function() {\r\n\t\t\t\t\tif (!buttonPressed && puzzleMode) {\r\n\t\t\t\t\t\tcursor('default');\r\n\t\t\t\t\t\tthis.color = color(0, 0);\r\n\t\t\t\t\t\tfrog.type = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonHover: function() {\r\n\t\t\t\t\tif (!buttonPressed && puzzleMode) {\r\n\t\t\t\t\t\tcursor('grab');\r\n\t\t\t\t\t\tthis.color = 'rgba(100, 100, 100, .8)';\r\n\t\t\t\t\t\tfrog.type = this.frogBound;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tonPress: function() {\r\n\t\t\t\t\tif (!buttonPressed && puzzleMode) {\r\n\t\t\t\t\t\tbuttonPressed = true;\r\n\t\t\t\t\t\tfrog.type = this.frogBound;\r\n\t\t\t\t\t\tthis.color = 'rgba(100, 255, 100, 1)';\r\n\r\n\t\t\t\t\t\t//if (!guiRef.cyclicMode)\r\n\t\t\t\t\t\tcontrolsEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.init['buttons'] = {\r\n\t\t\tdraw: false,\r\n\r\n\t\t\tobj: {\r\n\t\t\t\t'inventoryButton': {\r\n\t\t\t\t\tx: 1 / 64,\r\n\t\t\t\t\ty: 1 / 32,\r\n\r\n\t\t\t\t\twidth: 1 / 24,\r\n\t\t\t\t\taspect: 'square',\r\n\r\n\t\t\t\t\timage: gfx['inventoryButton'],\r\n\t\t\t\t\tfitImage: true,\r\n\t\t\t\t\ttext: '',\r\n\r\n\t\t\t\t\tonOutside: function() {\r\n\t\t\t\t\t\tthis.color = '#000';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonHover: function() {\r\n\t\t\t\t\t\tthis.color = '#222';\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonRelease: function() {\r\n\t\t\t\t\t\tplayer.gui.obj.quickFrog.draw = !player.gui.obj.quickFrog.draw;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tcalculate() {\r\n\t\tthis.obj = {};\r\n\r\n\t\tfor (const [typeName, objType] of Object.entries(this.init)) {\r\n\t\t\tthis.obj[typeName] = {draw: objType.draw, obj: {}};\r\n\r\n\t\t\tfor (const [objName, obj] of Object.entries(objType.obj)) {\r\n\t\t\t\t// scale to canvas size\r\n\t\t\t\tobj.x *= screenSizeX;\r\n\t\t\t\tobj.y *= screenSizeY;\r\n\r\n\t\t\t\tobj.width *= screenSizeX;\r\n\r\n\t\t\t\tif (obj.aspect == 'square') obj.height = obj.width;\r\n\t\t\t\telse obj.height *= screenSizeY;\r\n\r\n\t\t\t\t// copy properties to Clickable object\r\n\t\t\t\tthis.obj[typeName]['obj'][objName] = new Clickable();\r\n\t\t\t\tObject.assign(this.obj[typeName]['obj'][objName], obj);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// frame() \r\n\r\n\tdraw() {\r\n\t\tfor (const [typeName, objType] of Object.entries(this.obj)) {\r\n\t\t\tif (objType.draw) {\r\n\t\t\t\tfor (const [objName, obj] of Object.entries(objType['obj'])) {\r\n\t\t\t\t\tobj.draw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"names":[],"version":3,"file":"index.67d8d109.js.map","sourceRoot":"/__parcel_source_root/"}