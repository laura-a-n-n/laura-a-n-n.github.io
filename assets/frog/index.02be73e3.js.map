{"mappings":"IAeoBA,OAAK,SAAAC,SAAEC,EAAU,qBAAEC,EAAW,CAC9B,aACA,QACA,OACA,YAAc,UACd,MACA,WACA,YAAO,QAAY,UACnB,eACA,aAAM,eAAQ,QAAQ,iBAAW,MAAQ,WAC3D,YAAmB,mBAAkB,KAEjC,OAEJ,OAGE,UACA,WAGU,0BAIN,GACYF,EAAAG,QAAa,WAGzB,IAAA,MAAAC,KAAAF,EAAA,CAEI,MAAAG,EAAAC,eAAAF,GACPG,EAAAF,GAAAG,UAAA,GAAAP,SAAAG,SAGD,IAAA,MAASK,KAAGC,EAAY,CAEdJ,eAAAG,GAAV,MACUE,EAAGH,UAAY,GAAEP,SAAOQ,SAEnCF,EAAA,eAAAI,EAMCC,UAAWC,SAAO,GAAAZ,4BAGlBa,WAAQC,WAAW,GAAAd,qBAAA,GAAAA,0CAInB,WAGAe,YAAc,KAEdC,YAAc,aAGd,WACW,IAAAC,EAAA,IAAAC,aAEXD,EAAAX,IAAAA,EACAW,EAAAN,UAAAA,UACAM,EAAIJ,WAAUA,WAEhBM,aAAAC,YAAAC,kBAGIJ,EAAGK","sources":["public/src/main.js"],"sourcesContent":["  /*         _\r\n  __   ___.--'_`.     .'_`--.___   __\r\n ( _`.'. -   'o` )   ( 'o`   - .`.'_ )\r\n _\\.'_'      _.-'     `-._      `_`./_\r\n( \\`. )    //\\`         '/\\\\    ( .'/ )\r\n \\_`-'`---'\\\\__,       ,__//`---'`-'_/\r\n  \\`        `-\\         /-'        '/\r\n   `                               '  \r\n  */\r\n\r\nlet sketch = function(p) {\r\n  const assets = '/home/_frog/assets'; // no trailing slash!\r\n  const gfxNames = ['frog-stand', \r\n                    'water', \r\n                    'lily', 'lily-down', 'lily-up',\r\n                    'fly', 'bee-left', 'bee-right',\r\n                    'snail',\r\n                    'fly-bar',\r\n                    'fly-bar-grey',\r\n                    'fly-bubble', 'alert-bubble',\r\n                    'heart',\r\n                    'alt-frog-stand',\r\n                    'bby', 'bby-body', 'bby-frame',\r\n                    'inventory-button',\r\n                    'bg', 'bg-2', 'bg-3', 'menu-bg', 'palms']\r\n  const gfxSheets = ['bby-spritesheet']\r\n\r\n  let gfx = {};\r\n\r\n  /* setup (っ◔◡◔)っ ❤ */\r\n\r\n  p.preload = function() {\r\n    // images\r\n    for (const obj of gfxNames) {\r\n      const key = camelizeDashes(obj);\r\n\r\n      gfx[key] = loadImage(`${assets}/img/${obj}.png`);\r\n    }\r\n\r\n    for (const obj of gfxSheets) {\r\n        const key = camelizeDashes(obj);\r\n        const img = loadImage(`${assets}/img/${obj}.png`);\r\n        gfx['bbySpritesheet'] = img;\r\n\r\n        // for (let i = 0; i < 10; i++) {\r\n          \r\n        // }\r\n    }\r\n\r\n    // font\r\n    pixelFont = loadFont(`${assets}/font/VT323-Regular.ttf`);\r\n\r\n    // shaders\r\n    frogShader = loadShader(`${assets}/shader/frog.vert`, \r\n                            `${assets}/shader/frog.frag`);\r\n  }\r\n\r\n  p.calcWindowBounds = function() {\r\n    //marginX = 0;\r\n    //marginY = 0;\r\n    screenSizeX = 1024;//windowWidth;// - marginX;\r\n    screenSizeY = 700;//windowHeight;// - marginY;\r\n  }\r\n\r\n  p.setup = function() {\r\n    /* ~ scene manager ~ */\r\n    let mgr = new SceneManager();\r\n\r\n    // inject properties\r\n    mgr.gfx = gfx;\r\n    mgr.pixelFont = pixelFont;\r\n    mgr.frogShader = frogShader;\r\n\r\n    // environment\r\n    generalState.envFunction = linearEnvironment;\r\n\r\n    // setup\r\n    mgr.wire();\r\n    //mgr.showScene(FactorsPuzzle, {specialLily: 9, initVals: [2, 3, 4, 5]});\r\n    //mgr.showScene(CyclicFactorsPuzzle, {specialLily: 9, initVals: [2, 3, 4, 5]})\r\n    //mgr.showScene(FrogHeaven);\r\n    mgr.showScene(Menu);\r\n  }\r\n};\r\n\r\nwindow.onload = () => { \r\n  new p5(sketch, window.document.getElementById('game-container'));\r\n};"],"names":["sketch","p","assets","gfxNames","preload","obj","key","camelizeDashes","gfx","loadImage","obj1","gfxSheets","img","pixelFont","loadFont","frogShader","loadShader","screenSizeX","screenSizeY","mgr","SceneManager","generalState","envFunction","linearEnvironment","wire"],"version":3,"file":"index.02be73e3.js.map"}